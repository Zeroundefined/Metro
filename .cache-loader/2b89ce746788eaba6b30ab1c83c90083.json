{"remainingRequest":"G:\\外包\\Metro\\Metro\\node_modules\\thread-loader\\dist\\cjs.js??ref--4-1!G:\\外包\\Metro\\Metro\\node_modules\\ts-loader\\index.js??ref--4-2!G:\\外包\\Metro\\Metro\\src\\pages\\Login\\index.tsx","dependencies":[{"path":"G:\\外包\\Metro\\Metro\\src\\pages\\Login\\index.tsx","mtime":1529144016000},{"path":"G:\\外包\\Metro\\Metro\\node_modules\\cache-loader\\dist\\cjs.js","mtime":0},{"path":"G:\\外包\\Metro\\Metro\\node_modules\\thread-loader\\dist\\cjs.js","mtime":0},{"path":"G:\\外包\\Metro\\Metro\\node_modules\\ts-loader\\index.js","mtime":1528433923000}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst React = require(\"react\");\r\nconst antd_1 = require(\"antd\");\r\nconst react_router_1 = require(\"react-router\");\r\nconst react_redux_1 = require(\"react-redux\");\r\nconst LoginRedux_1 = require(\"./LoginRedux\");\r\nrequire(\"./Login.scss\");\r\nconst FormItem = antd_1.Form.Item;\r\nclass Login extends React.Component {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.handleSubmit = () => {\r\n            const { form: { validateFields }, login } = this.props;\r\n            validateFields((err, value) => {\r\n                if (err) {\r\n                    return;\r\n                }\r\n                login(value.userName, value.password).then(data => {\r\n                    if (data.errMsg) {\r\n                        antd_1.message.error(data.errMsg);\r\n                    }\r\n                    else {\r\n                        antd_1.message.success(\"登录成功\");\r\n                        react_router_1.browserHistory.push('/metaCenter');\r\n                    }\r\n                });\r\n            });\r\n        };\r\n    }\r\n    render() {\r\n        const { form: { getFieldDecorator } } = this.props;\r\n        return React.createElement(\"div\", { className: \"login\" },\r\n            React.createElement(\"div\", { className: \"login-icon\" }),\r\n            React.createElement(\"div\", { className: \"login-title\" }, \"\\u901A\\u53F7\\u5927\\u5C4F\\u6570\\u636E\\u540E\\u53F0\\u7BA1\\u7406\\u7CFB\\u7EDF\"),\r\n            React.createElement(\"div\", { className: \"login-form\" },\r\n                React.createElement(antd_1.Form, null,\r\n                    React.createElement(FormItem, null, getFieldDecorator('userName', {\r\n                        rules: [\r\n                            { required: true, message: '请输入用户名' },\r\n                            { pattern: /\\w+/, message: '请输入正确的用户名，允许数字，字母，下划线' }\r\n                        ],\r\n                    })(React.createElement(antd_1.Input, { prefix: React.createElement(antd_1.Icon, { type: \"user\", style: { color: 'rgba(0,0,0,.25)' } }), placeholder: \"\\u8BF7\\u8F93\\u5165\\u7528\\u6237\\u540D\" }))),\r\n                    React.createElement(FormItem, null, getFieldDecorator('password', {\r\n                        rules: [\r\n                            { required: true, message: '请输入密码' },\r\n                            { pattern: /\\w+/, message: '请输入正确的密码，允许数字，字母，下划线' }\r\n                        ],\r\n                    })(React.createElement(antd_1.Input, { prefix: React.createElement(antd_1.Icon, { type: \"lock\", style: { color: 'rgba(0,0,0,.25)' } }), type: \"password\", placeholder: \"\\u8BF7\\u8F93\\u5165\\u5BC6\\u7801\" }))),\r\n                    React.createElement(antd_1.Button, { onClick: this.handleSubmit, type: \"primary\" }, \"\\u767B\\u5F55\"))));\r\n    }\r\n}\r\nexports.default = antd_1.Form.create()(react_redux_1.connect(null, LoginRedux_1.actions)(Login));\r\n",{"version":3,"file":"G:\\外包\\Metro\\Metro\\src\\pages\\Login\\index.tsx","sourceRoot":"","sources":["G:\\外包\\Metro\\Metro\\src\\pages\\Login\\index.tsx"],"names":[],"mappings":";;AAAA,+BAA+B;AAC/B,+BAA0D;AAC1D,+CAA8C;AAC9C,6CAAsC;AACtC,6CAAuC;AAEvC,wBAAsB;AACtB,MAAM,QAAQ,GAAG,WAAI,CAAC,IAAI,CAAC;AAE3B,WAAY,SAAQ,KAAK,CAAC,SAA8C;IAAxE;;QACE,iBAAY,GAAG,GAAG,EAAE;YAClB,MAAM,EAAE,IAAI,EAAE,EAAC,cAAc,EAAC,EAAE,KAAK,EAAC,GAAG,IAAI,CAAC,KAAK,CAAC;YACpD,cAAc,CAAC,CAAC,GAAG,EAAE,KAAK,EAAE,EAAE;gBAC5B,IAAG,GAAG,EAAE;oBACN,OAAM;iBACP;gBAEA,KAAK,CAAC,KAAK,CAAC,QAAQ,EAAE,KAAK,CAAC,QAAQ,CAAS,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;oBACzD,IAAG,IAAI,CAAC,MAAM,EAAE;wBACd,cAAO,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;qBAC5B;yBAAM;wBACL,cAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;wBACxB,6BAAc,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;qBACpC;gBACH,CAAC,CAAC,CAAA;YAEJ,CAAC,CAAC,CAAA;QACJ,CAAC,CAAA;IAkCH,CAAC;IAhCC,MAAM;QACJ,MAAM,EAAE,IAAI,EAAE,EAAE,iBAAiB,EAAE,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;QACnD,OAAO,6BAAK,SAAS,EAAC,OAAO;YAC3B,6BAAK,SAAS,EAAC,YAAY,GAAE;YAC7B,6BAAK,SAAS,EAAC,aAAa,+EAAmB;YAC/C,6BAAK,SAAS,EAAC,YAAY;gBACzB,oBAAC,WAAI;oBACH,oBAAC,QAAQ,QACN,iBAAiB,CAAC,UAAU,EAAE;wBAC7B,KAAK,EAAE;4BACL,EAAE,QAAQ,EAAE,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE;4BACrC,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,uBAAuB,EAAC;yBACpD;qBACF,CAAC,CACA,oBAAC,YAAK,IAAC,MAAM,EAAE,oBAAC,WAAI,IAAC,IAAI,EAAC,MAAM,EAAC,KAAK,EAAE,EAAE,KAAK,EAAE,iBAAiB,EAAE,GAAI,EAAE,WAAW,EAAC,sCAAQ,GAAG,CAClG,CACQ;oBACX,oBAAC,QAAQ,QACN,iBAAiB,CAAC,UAAU,EAAE;wBAC7B,KAAK,EAAE;4BACL,EAAE,QAAQ,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE;4BACpC,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,sBAAsB,EAAC;yBACnD;qBACF,CAAC,CACA,oBAAC,YAAK,IAAC,MAAM,EAAE,oBAAC,WAAI,IAAC,IAAI,EAAC,MAAM,EAAC,KAAK,EAAE,EAAE,KAAK,EAAE,iBAAiB,EAAE,GAAI,EAAE,IAAI,EAAC,UAAU,EAAC,WAAW,EAAC,gCAAO,GAAG,CACjH,CACQ;oBACX,oBAAC,aAAM,IAAC,OAAO,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,EAAC,SAAS,mBAAY,CACzD,CACH,CACF,CAAA;IACR,CAAC;CACF;AAED,kBAAe,WAAI,CAAC,MAAM,EAAE,CAAC,qBAAO,CAAC,IAAI,EAAE,oBAAO,CAAC,CAAC,KAAK,CAAC,CAAC,CAAA","sourcesContent":["import * as React from 'react';\nimport { Form, Input, Icon, Button, message } from 'antd';\nimport { browserHistory } from 'react-router';\nimport { connect } from 'react-redux';\nimport { actions } from './LoginRedux';\nimport { FormComponentProps } from 'antd/lib/form';\nimport './Login.scss';\nconst FormItem = Form.Item;\n\nclass Login extends React.Component<FormComponentProps & typeof actions> {\n  handleSubmit = () => {\n    const { form: {validateFields}, login} = this.props;\n    validateFields((err, value) => {\n      if(err) {\n        return \n      }\n\n      (login(value.userName, value.password) as any).then(data => {\n        if(data.errMsg) {\n          message.error(data.errMsg);\n        } else {\n          message.success(\"登录成功\");\n          browserHistory.push('/metaCenter');\n        }\n      })\n\n    })\n  }\n\n  render() {\n    const { form: { getFieldDecorator } } = this.props;\n    return <div className=\"login\">\n      <div className=\"login-icon\"/>\n      <div className=\"login-title\">通号大屏数据后台管理系统</div>\n      <div className=\"login-form\">\n        <Form>\n          <FormItem>\n            {getFieldDecorator('userName', {\n              rules: [\n                { required: true, message: '请输入用户名' },\n                { pattern: /\\w+/, message: '请输入正确的用户名，允许数字，字母，下划线'}\n              ],\n            })(\n              <Input prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"请输入用户名\" />\n            )}\n          </FormItem>\n          <FormItem>\n            {getFieldDecorator('password', {\n              rules: [\n                { required: true, message: '请输入密码' },\n                { pattern: /\\w+/, message: '请输入正确的密码，允许数字，字母，下划线'}\n              ],\n            })(\n              <Input prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} type=\"password\" placeholder=\"请输入密码\" />\n            )}\n          </FormItem>\n          <Button onClick={this.handleSubmit} type=\"primary\">登录</Button>\n        </Form>\n      </div>\n    </div>\n  }\n}\n\nexport default Form.create()(connect(null, actions)(Login))"]}]}