{"remainingRequest":"/Users/zhangmuren/project/Metro/node_modules/thread-loader/dist/cjs.js??ref--4-1!/Users/zhangmuren/project/Metro/node_modules/ts-loader/index.js??ref--4-2!/Users/zhangmuren/project/Metro/src/pages/Reports/ReportCard/WorkingCard.tsx","dependencies":[{"path":"/Users/zhangmuren/project/Metro/src/pages/Reports/ReportCard/WorkingCard.tsx","mtime":1530338626000},{"path":"/Users/zhangmuren/project/Metro/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/zhangmuren/project/Metro/node_modules/thread-loader/dist/cjs.js","mtime":0},{"path":"/Users/zhangmuren/project/Metro/node_modules/ts-loader/index.js","mtime":1528433923000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst React = require(\"react\");\nconst ReactHighcharts = require(\"react-highcharts\");\nconst components_1 = require(\"../../../components\");\nrequire(\"./WorkingCard.scss\");\nclass WorkingCard extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.fixNumber = num => {\n            return num && Number((num * 100).toFixed(2));\n        };\n        this.handleReachRatioConfig = () => {\n            const { data } = this.props;\n            let { reachRatio } = data;\n            return {\n                title: {\n                    text: '施工计划兑现率'\n                },\n                colors: ['#40a9ff', 'rgba(0,0,0,0.05)'],\n                series: [{\n                        type: 'pie',\n                        data: [\n                            {\n                                name: '施工计划兑现率',\n                                y: this.fixNumber(reachRatio),\n                                sliced: true,\n                                dataLabels: {\n                                    enabled: true,\n                                    format: '<b>{point.name}</b>: {point.percentage:.1f} %',\n                                },\n                            },\n                            {\n                                name: 'Useless',\n                                y: this.fixNumber(1 - reachRatio),\n                                dataLabels: {\n                                    enabled: false,\n                                },\n                            },\n                        ]\n                    }]\n            };\n        };\n        this.handleWorkingTimeRateConfig = () => {\n            const { data } = this.props;\n            let { hourRatio } = data;\n            return {\n                title: {\n                    text: '施工计划工时利用率'\n                },\n                colors: ['#40a9ff', 'rgba(0,0,0,0.05)'],\n                series: [{\n                        type: 'pie',\n                        data: [\n                            {\n                                name: '施工计划工时利用率',\n                                y: this.fixNumber(hourRatio),\n                                sliced: true,\n                                dataLabels: {\n                                    enabled: false,\n                                },\n                            },\n                            {\n                                name: 'Userless',\n                                y: this.fixNumber(1 - hourRatio),\n                                dataLabels: {\n                                    enabled: false,\n                                    format: '<b>{point.name}</b>: {point.percentage:.1f} %',\n                                },\n                            },\n                        ]\n                    }]\n            };\n        };\n        this.handleUpdateRatioConfig = () => {\n            const { data } = this.props;\n            let { updateRatio } = data;\n            return {\n                title: {\n                    text: '施工计划变更率'\n                },\n                colors: ['#40a9ff', 'rgba(0,0,0,0.05)'],\n                series: [{\n                        type: 'pie',\n                        data: [\n                            {\n                                name: '施工计划变更率',\n                                y: this.fixNumber(updateRatio),\n                                sliced: true,\n                                dataLabels: {\n                                    enabled: true,\n                                    format: '<b>{point.name}</b>: {point.percentage:.1f} %',\n                                },\n                            },\n                            {\n                                name: 'Useless',\n                                y: this.fixNumber(1 - updateRatio),\n                                dataLabels: {\n                                    enabled: false,\n                                },\n                            },\n                        ]\n                    }]\n            };\n        };\n        this.handleLineDividedConfig = () => {\n            const { data } = this.props;\n            const lineDivided = data.lineDivided;\n            const list = [];\n            const lineWorking = [];\n            const categories = [\n                '一号线', '二号线', '三号线', '四号线', '五号线', '六号线', '七号线', '八号线', '九号线', '十号线', '十一号线', '十二号线', '十三号线', '十四号线', '十五号线', '十六号线', '十七号线'\n            ];\n            if (lineDivided) {\n                for (var i = 1; i <= 17; i++) {\n                    list.push(lineDivided[i - 1][1]);\n                    lineWorking.push(`${categories[i - 1]}${lineDivided[i - 1][1]}个`);\n                }\n            }\n            return [{\n                    chart: {\n                        type: 'column'\n                    },\n                    title: {\n                        text: '施工数量(路线)'\n                    },\n                    xAxis: {\n                        categories,\n                        crosshair: true\n                    },\n                    yAxis: {\n                        min: 0,\n                        title: {\n                            text: '施工数量'\n                        }\n                    },\n                    tooltip: {\n                        // head + 每个 point + footer 拼接成完整的 table\n                        headerFormat: `<span style='font-size:10px'>{point.key}</span><table>`,\n                        pointFormat: `<tr><td style='color:{series.color};padding:0'>{series.name}: </td>' +\n          '<td style='padding:0'><b>{point.y:.1f} mm</b></td></tr>`,\n                        footerFormat: '</table>',\n                        shared: true,\n                        useHTML: true\n                    },\n                    series: [{\n                            data: list\n                        }]\n                }, lineWorking.join(',')];\n        };\n        this.handleHourDividedConfig = () => {\n            const { data } = this.props;\n            let { hourDivided } = data;\n            let categories = [];\n            let datas = [];\n            hourDivided && hourDivided.map(divid => {\n                categories.push(divid.key);\n                datas.push(divid.value);\n            });\n            return {\n                chart: {\n                    type: 'area'\n                },\n                title: {\n                    text: '施工数量（每小时）'\n                },\n                xAxis: {\n                    allowDecimals: false,\n                    categories: categories,\n                },\n                yAxis: {\n                    title: {\n                        text: '施工小时'\n                    },\n                    labels: {\n                        formatter: function () {\n                            return this.value + 'h';\n                        }\n                    }\n                },\n                series: [{\n                        data: datas\n                    }]\n            };\n        };\n    }\n    render() {\n        const { data } = this.props;\n        let [LineDividedConfig, lineWorking] = this.handleLineDividedConfig();\n        return React.createElement(components_1.Card, { className: 'working-card', title: '\\u65BD\\u5DE5\\u6A21\\u5757', style: { marginBottom: 30 } },\n            React.createElement(\"div\", { style: { minWidth: '220px', width: '50%' } },\n                React.createElement(ReactHighcharts, { config: this.handleReachRatioConfig() })),\n            React.createElement(\"div\", { style: { minWidth: '220px', width: '50%' } },\n                React.createElement(ReactHighcharts, { config: this.handleWorkingTimeRateConfig() })),\n            React.createElement(\"div\", { style: { minWidth: '220px', width: '50%' } },\n                React.createElement(ReactHighcharts, { config: this.handleUpdateRatioConfig() })),\n            React.createElement(\"div\", { className: \"illegal\", style: { textAlign: 'center', margin: 'auto' } },\n                React.createElement(\"div\", { className: \"text\", style: { color: '#333333', fontSize: '18px' } }, \"\\u65BD\\u5DE5\\u8FDD\\u89C4\\u9879\"),\n                React.createElement(\"div\", { className: \"content\", style: { color: '#3cc5d4', marginTop: '40px', fontSize: '30px' } },\n                    \"\\u8FDD\\u89C4\\u65BD\\u5DE5\",\n                    React.createElement(\"span\", { style: { margin: '0 10px', fontSize: '50px', color: '#f5be25' } }, data.illegal),\n                    \"\\u8D77\")),\n            React.createElement(\"div\", { style: { minWidth: '220px', width: '50%' } },\n                React.createElement(ReactHighcharts, { config: LineDividedConfig }),\n                React.createElement(\"div\", { style: { padding: '20px 40px' } },\n                    \"\\u5404\\u7EBF\\u8DEF\\u65BD\\u5DE5\\u6570\",\n                    lineWorking)),\n            React.createElement(\"div\", { style: { minWidth: '220px', width: '50%' } },\n                React.createElement(ReactHighcharts, { config: this.handleHourDividedConfig() }),\n                React.createElement(\"div\", { style: { padding: '20px 40px' } }, \"XX\\u5E74XX\\u6708\\u65BD\\u5DE5\\u7BA1\\u7406\\u7CFB\\u7EDF\\u5171\\u529E\\u7406XX\\u8D77\\u65BD\\u5DE5\\uFF0C\\u5176\\u4E2D\\u65E5\\u5E38\\u5DE1\\u68C0\\u65BD\\u5DE5XX\\u8D77\\uFF0C\\u9879\\u76EE\\u65BD\\u5DE5XX\\u8D77\\uFF0C\\u4E8C\\u7EA7\\u91CD\\u5927\\u65BD\\u5DE5XX\\u8D77\\u3002\\u65BD\\u5DE5\\u5151\\u73B0\\u7387XX\\uFF0C\\u5DE5\\u65F6\\u5229\\u7528\\u7387XX\\uFF0C\\u5B9E\\u65BD\\u89C4\\u8303\\u7387XX\\uFF0C\\u8BA1\\u5212\\u53D8\\u66F4\\u7387XX\\u3002\")));\n    }\n}\nexports.WorkingCard = WorkingCard;\n",{"version":3,"file":"/Users/zhangmuren/project/Metro/src/pages/Reports/ReportCard/WorkingCard.tsx","sourceRoot":"","sources":["/Users/zhangmuren/project/Metro/src/pages/Reports/ReportCard/WorkingCard.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as ReactHighcharts from 'react-highcharts';\nimport { Card } from '../../../components';\nimport './WorkingCard.scss';\n\ninterface Props {\n  data: any;\n}\n\nexport class WorkingCard extends React.Component<Props> {\n  fixNumber = num => {\n    return num && Number((num * 100).toFixed(2))\n  }\n  handleReachRatioConfig = () => {\n    const { data } = this.props;\n    let { reachRatio } = data;\n    return {\n      title: {\n        text: '施工计划兑现率'\n      },\n      colors: ['#40a9ff', 'rgba(0,0,0,0.05)'],\n      series: [{\n        type: 'pie',\n        data: [\n          {\n            name: '施工计划兑现率',\n            y: this.fixNumber(reachRatio),\n            sliced: true,\n            dataLabels: {\n              enabled: true,\n              format: '<b>{point.name}</b>: {point.percentage:.1f} %',\n\n            },\n          },\n          {\n            name: 'Useless',\n            y: this.fixNumber(1-reachRatio),\n            dataLabels: {\n              enabled: false,\n            },\n          },\n        ]\n      }]\n    }\n  }\n\n  handleWorkingTimeRateConfig = () => {\n    const { data } = this.props;\n    let { hourRatio } = data;\n    return {\n      title: {\n        text: '施工计划工时利用率'\n      },\n      colors: ['#40a9ff', 'rgba(0,0,0,0.05)'],\n      series: [{\n        type: 'pie',\n        data: [\n          {\n            name: '施工计划工时利用率',\n            y: this.fixNumber(hourRatio),\n            sliced: true,\n            dataLabels: {\n              enabled: false,\n            },\n          },\n          {\n            name: 'Userless',\n            y: this.fixNumber(1-hourRatio),\n            dataLabels: {\n              enabled: false,\n              format: '<b>{point.name}</b>: {point.percentage:.1f} %',\n            },\n          },\n        ]\n      }]\n    }\n  }\n\n  handleUpdateRatioConfig = () => {\n    const { data } = this.props;\n    let { updateRatio } = data;\n    return {\n      title: {\n        text: '施工计划变更率'\n      },\n      colors: ['#40a9ff', 'rgba(0,0,0,0.05)'],\n      series: [{\n        type: 'pie',\n        data: [\n          {\n            name: '施工计划变更率',\n            y: this.fixNumber(updateRatio),\n            sliced: true,\n            dataLabels: {\n              enabled: true,\n              format: '<b>{point.name}</b>: {point.percentage:.1f} %',\n\n            },\n          },\n          {\n            name: 'Useless',\n            y: this.fixNumber(1-updateRatio),\n            dataLabels: {\n              enabled: false,\n            },\n          },\n        ]\n      }]\n    }\n  }\n\n  handleLineDividedConfig = () => {\n    const {\n      data\n    } = this.props;\n    const lineDivided = data.lineDivided;\n    const list = [];\n    const lineWorking = [];\n    const categories = [\n      '一号线', '二号线', '三号线', '四号线', '五号线', '六号线', '七号线', '八号线', '九号线', '十号线', '十一号线', '十二号线', '十三号线', '十四号线', '十五号线', '十六号线', '十七号线'\n    ];\n    if(lineDivided) {\n      for (var i = 1; i <= 17; i++) {\n        list.push(lineDivided[i-1][1]);\n        lineWorking.push(`${categories[i-1]}${lineDivided[i-1][1]}个`)\n      }\n    }\n\n    return [{\n      chart: {\n        type: 'column'\n      },\n      title: {\n        text: '施工数量(路线)'\n      },\n      xAxis: {\n        categories,\n        crosshair: true\n      },\n      yAxis: {\n        min: 0,\n        title: {\n          text: '施工数量'\n        }\n      },\n      tooltip: {\n        // head + 每个 point + footer 拼接成完整的 table\n        headerFormat: `<span style='font-size:10px'>{point.key}</span><table>`,\n        pointFormat: `<tr><td style='color:{series.color};padding:0'>{series.name}: </td>' +\n          '<td style='padding:0'><b>{point.y:.1f} mm</b></td></tr>`,\n        footerFormat: '</table>',\n        shared: true,\n        useHTML: true\n      },\n      series: [{\n        data: list\n      }]\n    }, lineWorking.join(',')]\n  }\n\n  handleHourDividedConfig = () => {\n    const { data } = this.props;\n    let { hourDivided } = data;\n    let categories = [];\n    let datas =[];\n\n    hourDivided && hourDivided.map(divid => {\n      categories.push(divid.key);\n      datas.push(divid.value)\n    })\n\n    return {\n      chart: {\n        type: 'area'\n      },\n      title: {\n        text: '施工数量（每小时）'\n      },\n      xAxis: {\n        allowDecimals: false,\n        categories: categories,\n      },\n      yAxis: {\n        title: {\n          text: '施工小时'\n        },\n        labels: {\n          formatter: function () {\n            return this.value + 'h';\n          }\n        }\n      },\n      series: [{\n        data: datas\n      }]\n    }\n  }\n\n\n\n  render() {\n    const { data } = this.props;\n    let [LineDividedConfig, lineWorking] = this.handleLineDividedConfig();\n    return <Card className='working-card' title='施工模块' style={{ marginBottom: 30}}>\n      <div style={{minWidth: '220px', width: '50%'}}><ReactHighcharts config={this.handleReachRatioConfig()} /></div>\n      <div style={{minWidth: '220px', width: '50%'}}><ReactHighcharts config={this.handleWorkingTimeRateConfig()} /></div>\n      <div style={{minWidth: '220px', width: '50%'}}><ReactHighcharts config={this.handleUpdateRatioConfig()} /></div>\n      <div className=\"illegal\" style={{textAlign: 'center', margin: 'auto'}}>\n        <div className=\"text\" style={{color: '#333333', fontSize: '18px'}}>施工违规项</div>\n        <div className=\"content\" style={{color: '#3cc5d4', marginTop: '40px', fontSize: '30px'}}>\n          违规施工<span style={{margin: '0 10px', fontSize: '50px', color: '#f5be25'}}>{data.illegal}</span>起</div>\n      </div>\n      <div style={{minWidth: '220px', width: '50%'}}><ReactHighcharts config={LineDividedConfig} />\n        <div style={{padding: '20px 40px'}}>各线路施工数{lineWorking}</div>   \n      </div>\n      <div style={{minWidth: '220px', width: '50%'}}><ReactHighcharts config={this.handleHourDividedConfig()} />\n        <div style={{padding: '20px 40px'}}>XX年XX月施工管理系统共办理XX起施工，其中日常巡检施工XX起，项目施工XX起，二级重大施工XX起。施工兑现率XX，工时利用率XX，实施规范率XX，计划变更率XX。</div>\n      </div>\n    </Card>\n  }\n}"]}]}