{"remainingRequest":"G:\\外包\\Metro\\Metro\\node_modules\\thread-loader\\dist\\cjs.js??ref--4-1!G:\\外包\\Metro\\Metro\\node_modules\\ts-loader\\index.js??ref--4-2!G:\\外包\\Metro\\Metro\\src\\pages\\Reports\\ReportsRedux.tsx","dependencies":[{"path":"G:\\外包\\Metro\\Metro\\src\\pages\\Reports\\ReportsRedux.tsx","mtime":1530355246647},{"path":"G:\\外包\\Metro\\Metro\\node_modules\\cache-loader\\dist\\cjs.js","mtime":0},{"path":"G:\\外包\\Metro\\Metro\\node_modules\\thread-loader\\dist\\cjs.js","mtime":0},{"path":"G:\\外包\\Metro\\Metro\\node_modules\\ts-loader\\index.js","mtime":1528433923000}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst http_1 = require(\"../../utils/http\");\r\nconst antd_1 = require(\"antd\");\r\nconst react_router_1 = require(\"react-router\");\r\nconst prefix = 'reports/';\r\nvar DataType;\r\n(function (DataType) {\r\n    DataType[\"breakdown_facility_result\"] = \"faultData\";\r\n    DataType[\"construction_information_result\"] = \"workingData\";\r\n    DataType[\"facility_information_result\"] = \"equipData\";\r\n    DataType[\"material_information_result\"] = \"materialData\";\r\n    DataType[\"polling_information_result\"] = \"checkInData\";\r\n    DataType[\"breakdown_facility_origin\"] = \"originFaultData\";\r\n    DataType[\"construction_information_origin\"] = \"originWorkingData\";\r\n    DataType[\"facility_information_origin\"] = \"originEquipData\";\r\n    DataType[\"material_information_origin\"] = \"originMaterialData\";\r\n    DataType[\"polling_information_origin\"] = \"originCheckInData\";\r\n})(DataType || (DataType = {}));\r\nexports.DataType = DataType;\r\nconst getResultTables = () => {\r\n    return (dispatch) => {\r\n        return fetch(`${http_1.url}/getResultTables`, {\r\n            credentials: \"include\",\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then((res) => res.json()).then(data => {\r\n            dispatch({\r\n                type: `${prefix}resultTables`,\r\n                payload: data\r\n            });\r\n            if (data.errMsg) {\r\n                if (data.code === 401) {\r\n                    react_router_1.browserHistory.push('/login');\r\n                }\r\n                antd_1.message.error(data.errMsg);\r\n            }\r\n            return data;\r\n        });\r\n    };\r\n};\r\nconst getOriginTables = () => {\r\n    return (dispatch) => {\r\n        return fetch(`${http_1.url}/getOriginTables`, {\r\n            credentials: \"include\",\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then((res) => res.json()).then(data => {\r\n            dispatch({\r\n                type: `${prefix}originTables`,\r\n                payload: data\r\n            });\r\n            if (data.errMsg) {\r\n                if (data.code === 401) {\r\n                    react_router_1.browserHistory.push('/login');\r\n                }\r\n                antd_1.message.error(data.errMsg);\r\n            }\r\n            return data;\r\n        });\r\n    };\r\n};\r\nconst updateData = (selectedTable, editingItem, value) => {\r\n    return () => {\r\n        return fetch(`${http_1.url}/updateData`, {\r\n            method: 'POST',\r\n            credentials: \"include\",\r\n            body: JSON.stringify({\r\n                selectedTable,\r\n                editingItem,\r\n                value,\r\n                editor: 'zhouyun'\r\n            }),\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then((res) => res.json()).then(data => {\r\n            if (data.errMsg) {\r\n                if (data.code === 401) {\r\n                    react_router_1.browserHistory.push('/login');\r\n                }\r\n                antd_1.message.error(data.errMsg);\r\n            }\r\n            return data;\r\n        });\r\n    };\r\n};\r\n/** 获取原始数据 */\r\nconst getData = (selectedTable, timeRange, field, keyword) => {\r\n    return (dispatch) => {\r\n        return fetch(`${http_1.url}/getData?table=${selectedTable}&timeRange=${[new Date(timeRange[0]).toLocaleDateString(), new Date(timeRange[1]).toLocaleDateString()]}&keyword=${keyword}&field=${field}`, {\r\n            credentials: \"include\",\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then((res) => res.json()).then(data => {\r\n            dispatch({\r\n                type: `${prefix}${DataType[selectedTable]}`,\r\n                payload: data\r\n            });\r\n            if (data.errMsg) {\r\n                if (data.code === 401) {\r\n                    react_router_1.browserHistory.push('/login');\r\n                }\r\n                antd_1.message.error(data.errMsg);\r\n            }\r\n            return data;\r\n        });\r\n    };\r\n};\r\nconst getCalcData = (timeRange) => {\r\n    return (dispatch) => {\r\n        return fetch(`${http_1.url}/getCalcData?timeRange=${[new Date(timeRange[0]).toLocaleDateString(), new Date(timeRange[1]).toLocaleDateString()]}`, {\r\n            credentials: \"include\",\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then((res) => res.json()).then(data => {\r\n            dispatch({\r\n                type: `${prefix}CalcData`,\r\n                payload: data\r\n            });\r\n            if (data.errMsg) {\r\n                if (data.code === 401) {\r\n                    react_router_1.browserHistory.push('/login');\r\n                }\r\n                antd_1.message.error(data.errMsg);\r\n            }\r\n            return data;\r\n        });\r\n    };\r\n};\r\nconst screenshot = (content) => {\r\n    return () => {\r\n        return fetch(`${http_1.url}/screenshot`, {\r\n            credentials: \"include\",\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                content,\r\n            }),\r\n        }).then((res) => res.json()).then(data => {\r\n            if (data.errMsg) {\r\n                if (data.code === 401) {\r\n                    react_router_1.browserHistory.push('/login');\r\n                }\r\n                antd_1.message.error(data.errMsg);\r\n            }\r\n            return data;\r\n        });\r\n    };\r\n};\r\nconst actions = {\r\n    getData,\r\n    updateData,\r\n    getResultTables,\r\n    screenshot,\r\n    getCalcData,\r\n    getOriginTables\r\n};\r\nexports.actions = actions;\r\nclass InitState {\r\n}\r\nexports.InitState = InitState;\r\nconst reducer = (state = new InitState(), action) => {\r\n    switch (action.type) {\r\n        case `${prefix}resultTables`: {\r\n            return Object.assign({}, state, { resultTables: action.payload });\r\n        }\r\n        case `${prefix}originTables`: {\r\n            return Object.assign({}, state, { originTables: action.payload });\r\n        }\r\n        case `${prefix}faultData`:\r\n            return Object.assign({}, state, { faultData: action.payload });\r\n        case `${prefix}workingData`:\r\n            return Object.assign({}, state, { workingData: action.payload });\r\n        case `${prefix}equipData`:\r\n            return Object.assign({}, state, { equipData: action.payload });\r\n        case `${prefix}materialData`:\r\n            return Object.assign({}, state, { materialData: action.payload });\r\n        case `${prefix}checkInData`:\r\n            return Object.assign({}, state, { checkInData: action.payload });\r\n        case `${prefix}originFaultData`:\r\n            return Object.assign({}, state, { originFaultData: action.payload });\r\n        case `${prefix}originWorkingData`:\r\n            return Object.assign({}, state, { originWorkingData: action.payload });\r\n        case `${prefix}originEquipData`:\r\n            return Object.assign({}, state, { originEquipData: action.payload });\r\n        case `${prefix}originMaterialData`:\r\n            return Object.assign({}, state, { originMaterialData: action.payload });\r\n        case `${prefix}originCheckInData`:\r\n            return Object.assign({}, state, { originCheckInData: action.payload });\r\n        case `${prefix}CalcData`: {\r\n            return Object.assign({}, state, { calcData: action.payload });\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nexports.reducer = reducer;\r\n",{"version":3,"file":"G:\\外包\\Metro\\Metro\\src\\pages\\Reports\\ReportsRedux.tsx","sourceRoot":"","sources":["G:\\外包\\Metro\\Metro\\src\\pages\\Reports\\ReportsRedux.tsx"],"names":[],"mappings":"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","sourcesContent":["import { url, Response } from '../../utils/http';\r\nimport { message } from 'antd';\r\nimport { browserHistory } from 'react-router';\r\n\r\nconst prefix = 'reports/';\r\n\r\nenum DataType {\r\n  'breakdown_facility_result' = 'faultData',\r\n  'construction_information_result' = 'workingData',\r\n  'facility_information_result' = 'equipData',\r\n  'material_information_result' = 'materialData',\r\n  'polling_information_result' = 'checkInData',\r\n  'breakdown_facility_origin' = 'originFaultData',\r\n  'construction_information_origin' = 'originWorkingData',\r\n  'facility_information_origin' = 'originEquipData',\r\n  'material_information_origin' = 'originMaterialData',\r\n  'polling_information_origin' = 'originCheckInData'\r\n}\r\n\r\nconst getResultTables = () => {\r\n  return (dispatch) => {\r\n    return fetch(`${url}/getResultTables`, {\r\n      credentials: \"include\",\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then((res) => res.json()).then(data => {\r\n      dispatch({\r\n        type: `${prefix}resultTables`,\r\n        payload: data\r\n      })\r\n\r\n      if (data.errMsg) {\r\n        if(data.code === 401) {\r\n          browserHistory.push('/login');\r\n        }\r\n        message.error(data.errMsg);\r\n      }\r\n\r\n      return data\r\n    })\r\n  }\r\n}\r\n\r\nconst getOriginTables = () => {\r\n  return (dispatch) => {\r\n    return fetch(`${url}/getOriginTables`, {\r\n      credentials: \"include\",\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then((res) => res.json()).then(data => {\r\n      dispatch({\r\n        type: `${prefix}originTables`,\r\n        payload: data\r\n      })\r\n\r\n      if (data.errMsg) {\r\n        if(data.code === 401) {\r\n          browserHistory.push('/login');\r\n        }\r\n        message.error(data.errMsg);\r\n      }\r\n\r\n      return data\r\n    })\r\n  }\r\n}\r\n\r\nconst updateData = (selectedTable, editingItem, value) => {\r\n  return () => {\r\n    return fetch(`${url}/updateData`, {\r\n      method: 'POST',\r\n      credentials: \"include\",\r\n      body: JSON.stringify({\r\n        selectedTable,\r\n        editingItem,\r\n        value,\r\n        editor: 'zhouyun'\r\n      }),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then((res) => res.json()).then(data => {\r\n      if (data.errMsg) {\r\n        if(data.code === 401) {\r\n          browserHistory.push('/login');\r\n        }\r\n        message.error(data.errMsg);\r\n      }\r\n      return data;\r\n    });\r\n  }\r\n}\r\n\r\n/** 获取原始数据 */\r\nconst getData = (selectedTable, timeRange, field, keyword?) => {\r\n  return (dispatch) => {\r\n    return fetch(`${url}/getData?table=${selectedTable}&timeRange=${[new Date(timeRange[0]).toLocaleDateString(), new Date(timeRange[1]).toLocaleDateString()]}&keyword=${keyword}&field=${field}`, {\r\n      credentials: \"include\",\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then((res) => res.json()).then(data => {\r\n      dispatch({\r\n        type: `${prefix}${DataType[selectedTable]}`,\r\n        payload: data\r\n      })\r\n\r\n      if (data.errMsg) {\r\n        if(data.code === 401) {\r\n          browserHistory.push('/login');\r\n        }\r\n        message.error(data.errMsg);\r\n      }\r\n      return data\r\n    })\r\n  }\r\n}\r\n\r\nconst getCalcData = (timeRange) => {\r\n  return (dispatch) => {\r\n    return fetch(`${url}/getCalcData?timeRange=${[new Date(timeRange[0]).toLocaleDateString(), new Date(timeRange[1]).toLocaleDateString()]}`, {\r\n      credentials: \"include\",\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    }).then((res) => res.json()).then(data => {\r\n      dispatch({\r\n        type: `${prefix}CalcData`,\r\n        payload: data\r\n      })\r\n\r\n      if (data.errMsg) {\r\n        if(data.code === 401) {\r\n          browserHistory.push('/login');\r\n        }\r\n        message.error(data.errMsg);\r\n      }\r\n      return data\r\n    })\r\n  }\r\n}\r\n\r\nconst screenshot = (content) => {\r\n  return () => {\r\n    return fetch(`${url}/screenshot`, {\r\n      credentials: \"include\",\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      method: 'POST',\r\n      body: JSON.stringify({\r\n        content,\r\n      }),\r\n    }).then((res) => res.json()).then(data => {\r\n      if (data.errMsg) {\r\n        if(data.code === 401) {\r\n          browserHistory.push('/login');\r\n        }\r\n        message.error(data.errMsg);\r\n      }\r\n      return data\r\n    })\r\n  }\r\n}\r\n\r\nconst actions = {\r\n  getData,\r\n  updateData,\r\n  getResultTables,\r\n  screenshot,\r\n  getCalcData,\r\n  getOriginTables\r\n}\r\n\r\nclass InitState {\r\n  faultData: Response;\r\n  workingData: Response;\r\n  equipData: Response;\r\n  materialData: Response;\r\n  checkInData: Response;\r\n  resultTables: Response;\r\n  calcData: Response;\r\n  originTables: Response;\r\n  originFaultData: Response;\r\n  originWorkingData: Response;\r\n  originEquipData: Response;\r\n  originMaterialData: Response;\r\n  originCheckInData: Response;\r\n}\r\n\r\nconst reducer = (state = new InitState(), action): InitState => {\r\n  switch (action.type) {\r\n    case `${prefix}resultTables`: {\r\n      return {\r\n        ...state,\r\n        resultTables: action.payload\r\n      }\r\n    }\r\n\r\n    case `${prefix}originTables`: {\r\n      return {\r\n        ...state,\r\n        originTables: action.payload\r\n      }\r\n    }\r\n\r\n    case `${prefix}faultData`:\r\n      return {\r\n        ...state,\r\n        faultData: action.payload\r\n      }\r\n    case `${prefix}workingData`:\r\n      return {\r\n        ...state,\r\n        workingData: action.payload\r\n      }\r\n    case `${prefix}equipData`:\r\n      return {\r\n        ...state,\r\n        equipData: action.payload\r\n      }\r\n    case `${prefix}materialData`:\r\n      return {\r\n        ...state,\r\n        materialData: action.payload\r\n      }\r\n    case `${prefix}checkInData`:\r\n      return {\r\n        ...state,\r\n        checkInData: action.payload\r\n      }\r\n\r\n\r\n      case `${prefix}originFaultData`:\r\n      return {\r\n        ...state,\r\n        originFaultData: action.payload\r\n      }\r\n    case `${prefix}originWorkingData`:\r\n      return {\r\n        ...state,\r\n        originWorkingData: action.payload\r\n      }\r\n    case `${prefix}originEquipData`:\r\n      return {\r\n        ...state,\r\n        originEquipData: action.payload\r\n      }\r\n    case `${prefix}originMaterialData`:\r\n      return {\r\n        ...state,\r\n        originMaterialData: action.payload\r\n      }\r\n    case `${prefix}originCheckInData`:\r\n      return {\r\n        ...state,\r\n        originCheckInData: action.payload\r\n      }\r\n\r\n    case `${prefix}CalcData`: {\r\n      return {\r\n        ...state,\r\n        calcData: action.payload\r\n      }\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport { actions, reducer, InitState, DataType }"]}]}