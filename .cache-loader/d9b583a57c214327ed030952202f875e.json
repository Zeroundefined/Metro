{"remainingRequest":"/Users/zhangmuren/project/Metro/node_modules/thread-loader/dist/cjs.js??ref--4-1!/Users/zhangmuren/project/Metro/node_modules/ts-loader/index.js??ref--4-2!/Users/zhangmuren/project/Metro/src/utils/isLogin.ts","dependencies":[{"path":"/Users/zhangmuren/project/Metro/src/utils/isLogin.ts","mtime":1529841520000},{"path":"/Users/zhangmuren/project/Metro/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/zhangmuren/project/Metro/node_modules/thread-loader/dist/cjs.js","mtime":0},{"path":"/Users/zhangmuren/project/Metro/node_modules/ts-loader/index.js","mtime":1528433923000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst http_1 = require(\"./http\");\nconst checkAuth = (userName) => {\n    return fetch(`${http_1.url}/checkAuth?userName=${userName}`, {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    }).then((res) => res.json()).then(data => {\n        if (data.errMsg) {\n            // debugger\n            // message.error(data.errMsg);\n        }\n        return data;\n    });\n};\nexports.checkAuth = checkAuth;\nconst env = {\n    logStatus: false\n};\nexports.env = env;\n",{"version":3,"file":"/Users/zhangmuren/project/Metro/src/utils/isLogin.ts","sourceRoot":"","sources":["/Users/zhangmuren/project/Metro/src/utils/isLogin.ts"],"names":[],"mappings":";;AAAA,iCAA6B;AAE7B,MAAM,SAAS,GAAG,CAAC,QAAQ,EAAE,EAAE;IAC9B,OAAO,KAAK,CAAC,GAAG,UAAG,uBAAuB,QAAQ,EAAE,EAAE;QACrD,OAAO,EAAE;YACR,cAAc,EAAE,kBAAkB;SAClC;KACD,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;QAExC,IAAI,IAAI,CAAC,MAAM,EAAE;YAChB,WAAW;YACX,8BAA8B;SAC9B;QAED,OAAO,IAAI,CAAA;IACZ,CAAC,CAAC,CAAA;AACH,CAAC,CAAA;AAOQ,8BAAS;AAJlB,MAAM,GAAG,GAAG;IACX,SAAS,EAAE,KAAK;CAChB,CAAC;AAEkB,kBAAG","sourcesContent":["import { url } from './http';\n\nconst checkAuth = (userName) => {\n\treturn fetch(`${url}/checkAuth?userName=${userName}`, {\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json'\n\t\t}\n\t}).then((res) => res.json()).then(data => {\n\n\t\tif (data.errMsg) {\n\t\t\t// debugger\n\t\t\t// message.error(data.errMsg);\n\t\t}\n\n\t\treturn data\n\t})\n}\n\n\nconst env = {\n\tlogStatus: false\n};\n\nexport { checkAuth, env }\n"]}]}