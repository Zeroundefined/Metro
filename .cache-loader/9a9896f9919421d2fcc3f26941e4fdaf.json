{"remainingRequest":"/Users/zhangmuren/project/Metro/node_modules/thread-loader/dist/cjs.js??ref--4-1!/Users/zhangmuren/project/Metro/node_modules/ts-loader/index.js??ref--4-2!/Users/zhangmuren/project/Metro/src/pages/Reports/ReportCard/FaultCard.tsx","dependencies":[{"path":"/Users/zhangmuren/project/Metro/src/pages/Reports/ReportCard/FaultCard.tsx","mtime":1529728020000},{"path":"/Users/zhangmuren/project/Metro/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/zhangmuren/project/Metro/node_modules/thread-loader/dist/cjs.js","mtime":0},{"path":"/Users/zhangmuren/project/Metro/node_modules/ts-loader/index.js","mtime":1525713677000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst React = require(\"react\");\nconst ReactHighcharts = require(\"react-highcharts\");\nclass FaultCard extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.handleFaultPercentConfig = () => {\n            /** 故障类型占比 */\n            const { data } = this.props;\n            const total = data[0].type_comm + data[0].type_net + data[0].type_signal + data[0].type_other;\n            const final = [];\n            if (data[0].type_comm) {\n                final.push(['故障类型-通信类', data[0].type_comm / total]);\n            }\n            if (data[0].type_net) {\n                final.push(['故障类型-网络类', data[0].type_net / total]);\n            }\n            if (data[0].type_signal) {\n                final.push(['故障类型-信号类', data[0].type_signal / total]);\n            }\n            if (data[0].type_other) {\n                final.push(['故障类型-其他类', data[0].type_other / total]);\n            }\n            return {\n                chart: {\n                    spacing: [40, 0, 40, 0]\n                },\n                title: {\n                    floating: true,\n                    text: '故障类型占比'\n                },\n                tooltip: {\n                    pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\n                },\n                plotOptions: {\n                    pie: {\n                        allowPointSelect: true,\n                        cursor: 'pointer',\n                        dataLabels: {\n                            enabled: true,\n                            format: '<b>{point.name}</b>: {point.percentage:.1f} %',\n                            style: {\n                                color: 'black'\n                            }\n                        }\n                    }\n                },\n                series: [{\n                        type: 'pie',\n                        innerSize: '60%',\n                        name: '故障占比',\n                        data: final\n                    }]\n            };\n        };\n        this.handle24HourConfig = () => {\n            /** 24小时故障情况 */\n            const { data } = this.props;\n            const faults = data.slice(1, -1).map(item => {\n                let fault = 0;\n                Object.keys(item).forEach(key => {\n                    if (key.indexOf('line') > -1) {\n                        fault += item[key];\n                    }\n                });\n                return fault;\n            });\n            return {\n                chart: {\n                    type: 'area'\n                },\n                title: {\n                    text: '24小时故障情况'\n                },\n                xAxis: {\n                    allowDecimals: false,\n                    categories: [\n                        '0-2时', '2-4时', '4-6时', '6-8时', '8-10时', '10-12时', '12-14时', '14-16时', '16-18时', '18-20时', '20-22时', '22-24时'\n                    ],\n                },\n                yAxis: {\n                    title: {\n                        text: '故障数量'\n                    },\n                },\n                tooltip: {\n                    pointFormat: '{series.name} 发生故障 <b>{point.y:,.0f}</b>次'\n                },\n                series: [{\n                        name: '故障情况',\n                        data: faults\n                    }]\n            };\n        };\n        this.handleFaultStatusConfig = () => {\n            const { data } = this.props;\n            const final = [];\n            if (data[0].state_closed) {\n                final.push(['故障状态-已完结', data[0].state_closed]);\n            }\n            if (data[0].state_fixed) {\n                final.push(['故障状态-已修复', data[0].state_fixed]);\n            }\n            if (data[0].state_new) {\n                final.push(['故障状态-新报修', data[0].state_new]);\n            }\n            if (data[0].state_processed) {\n                final.push(['故障状态-在处理', data[0].state_processed]);\n            }\n            return {\n                chart: {\n                    spacing: [40, 0, 40, 0]\n                },\n                title: {\n                    text: '故障处理状态',\n                    margin: 30\n                },\n                plotOptions: {\n                    pie: {\n                        allowPointSelect: true,\n                        cursor: 'pointer',\n                        dataLabels: {\n                            enabled: false\n                        },\n                        showInLegend: true\n                    }\n                },\n                series: [{\n                        type: 'pie',\n                        innerSize: '60%',\n                        name: '故障处理状态',\n                        data: final\n                    }]\n            };\n        };\n        this.handleLineFaultConfig = () => {\n            const { data } = this.props;\n            const final = [];\n            Object.keys(data[0]).forEach(key => {\n                if (key.indexOf('line') > -1) {\n                    final.push(data[0][key]);\n                }\n            });\n            return {\n                chart: {\n                    type: 'column'\n                },\n                title: {\n                    text: '各线路故障情况'\n                },\n                xAxis: {\n                    categories: [\n                        '一号线', '二号线', '三号线', '四号线', '五号线', '六号线', '七号线', '八号线', '九号线', '十号线', '十一号线', '十二号线', '十三号线', '十四号线', '十五号线', '十六号线', '十七号线'\n                    ],\n                    crosshair: true\n                },\n                yAxis: {\n                    min: 0,\n                    title: {\n                        text: '故障数量（个）'\n                    }\n                },\n                tooltip: {\n                    pointFormat: '{series.name}: 发生故障<b>{point.y}个</b>'\n                },\n                plotOptions: {\n                    column: {\n                        borderWidth: 0\n                    }\n                },\n                series: [{\n                        name: '故障数量',\n                        data: final\n                    }]\n            };\n        };\n    }\n    render() {\n        const { data } = this.props;\n        return React.createElement(\"div\", { className: 'fault-card' },\n            React.createElement(ReactHighcharts, { config: this.handleFaultPercentConfig() }),\n            React.createElement(ReactHighcharts, { config: this.handle24HourConfig() }),\n            React.createElement(ReactHighcharts, { config: this.handleFaultStatusConfig() }),\n            React.createElement(ReactHighcharts, { config: this.handleLineFaultConfig() }));\n    }\n}\nexports.FaultCard = FaultCard;\n",{"version":3,"file":"/Users/zhangmuren/project/Metro/src/pages/Reports/ReportCard/FaultCard.tsx","sourceRoot":"","sources":["/Users/zhangmuren/project/Metro/src/pages/Reports/ReportCard/FaultCard.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as ReactHighcharts from 'react-highcharts';\n\ninterface Props {\n  data: any\n}\n\nexport class FaultCard extends React.Component<Props> {\n\n  handleFaultPercentConfig = () => {\n    /** 故障类型占比 */\n    const { data } = this.props;\n    const total = data[0].type_comm + data[0].type_net + data[0].type_signal + data[0].type_other;\n    const final = [];\n    if(data[0].type_comm) {\n      final.push(['故障类型-通信类', data[0].type_comm/total]);\n    } \n    if(data[0].type_net) {\n      final.push(['故障类型-网络类', data[0].type_net/total]);\n    } \n    if(data[0].type_signal) {\n      final.push(['故障类型-信号类', data[0].type_signal/total]);\n    } \n    if(data[0].type_other) {\n      final.push(['故障类型-其他类', data[0].type_other/total]);\n    }\n\n    return {\n      chart: {\n        spacing: [40, 0, 40, 0]\n      },\n      title: {\n        floating: true,\n        text: '故障类型占比'\n      },\n      tooltip: {\n        pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\n      },\n      plotOptions: {\n        pie: {\n          allowPointSelect: true,\n          cursor: 'pointer',\n          dataLabels: {\n            enabled: true,\n            format: '<b>{point.name}</b>: {point.percentage:.1f} %',\n            style: {\n              color: 'black'\n            }\n          }\n        }\n      },\n      series: [{\n        type: 'pie',\n        innerSize: '60%',\n        name: '故障占比',\n        data: final\n      }]\n    }\n  }\n\n  handle24HourConfig = () => {\n    /** 24小时故障情况 */\n    const { data } = this.props;\n    const faults = data.slice(1, -1).map(item => {\n      let fault = 0;\n      Object.keys(item).forEach(key => {\n        if(key.indexOf('line') > -1) {\n          fault += item[key]\n        }\n      })\n\n      return fault;\n    })\n    return {\n      chart: {\n        type: 'area'\n      },\n      title: {\n        text: '24小时故障情况'\n      },\n      xAxis: {\n        allowDecimals: false,\n        categories: [\n          '0-2时','2-4时','4-6时','6-8时','8-10时','10-12时','12-14时','14-16时','16-18时','18-20时','20-22时','22-24时'\n        ],\n      },\n      yAxis: {\n        title: {\n          text: '故障数量'\n        },\n      },\n      tooltip: {\n        pointFormat: '{series.name} 发生故障 <b>{point.y:,.0f}</b>次'\n      },\n      series: [{\n        name: '故障情况',\n        data: faults\n      }]\n    }\n  }\n\n  handleFaultStatusConfig = () => {\n    const { data } = this.props;\n    const final = [];\n    if(data[0].state_closed) {\n      final.push(['故障状态-已完结', data[0].state_closed]);\n    } \n    if(data[0].state_fixed) {\n      final.push(['故障状态-已修复', data[0].state_fixed]);\n    } \n    if(data[0].state_new) {\n      final.push(['故障状态-新报修', data[0].state_new]);\n    } \n    if(data[0].state_processed) {\n      final.push(['故障状态-在处理', data[0].state_processed]);\n    }\n    return {\n      chart: {\n        spacing: [40, 0, 40, 0]\n      },\n      title: {\n        text: '故障处理状态',\n        margin: 30\n      },\n      plotOptions: {\n        pie: {\n          allowPointSelect: true,\n          cursor: 'pointer',\n          dataLabels: {\n            enabled: false\n          },\n          showInLegend: true\n        }\n      },\n      series: [{\n        type: 'pie',\n        innerSize: '60%',\n        name: '故障处理状态',\n        data: final\n      }]\n    }\n  }\n\n  handleLineFaultConfig = () => {\n    const { data } = this.props;\n    const final = [];\n    Object.keys(data[0]).forEach(key => {\n      if(key.indexOf('line') > -1) {\n        final.push(data[0][key])\n      }\n    })\n    return {\n      chart: {\n        type: 'column'\n      },\n      title: {\n        text: '各线路故障情况'\n      },\n      xAxis: {\n        categories: [\n          '一号线', '二号线', '三号线', '四号线', '五号线', '六号线', '七号线', '八号线', '九号线', '十号线', '十一号线', '十二号线', '十三号线', '十四号线', '十五号线', '十六号线', '十七号线'\n        ],\n        crosshair: true\n      },\n      yAxis: {\n        min: 0,\n        title: {\n          text: '故障数量（个）'\n        }\n      },\n      tooltip: {\n        pointFormat: '{series.name}: 发生故障<b>{point.y}个</b>'\n      },\n      plotOptions: {\n        column: {\n          borderWidth: 0\n        }\n      },\n      series: [{\n        name: '故障数量',\n        data: final\n      }]\n    }\n  }\n \n  render() {\n    const { data } = this.props;\n\n    return <div className='fault-card'>\n      <ReactHighcharts config={this.handleFaultPercentConfig()} />\n      <ReactHighcharts config={this.handle24HourConfig()} />\n      <ReactHighcharts config={this.handleFaultStatusConfig()} />\n      <ReactHighcharts config={this.handleLineFaultConfig()} />\n    </div>\n  }\n}"]}]}