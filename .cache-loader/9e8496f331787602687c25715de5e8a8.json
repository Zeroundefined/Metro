{"remainingRequest":"G:\\外包\\Metro\\Metro\\node_modules\\thread-loader\\dist\\cjs.js??ref--4-1!G:\\外包\\Metro\\Metro\\node_modules\\ts-loader\\index.js??ref--4-2!G:\\外包\\Metro\\Metro\\src\\pages\\Reports\\ReportCard\\CheckInCard.tsx","dependencies":[{"path":"G:\\外包\\Metro\\Metro\\src\\pages\\Reports\\ReportCard\\CheckInCard.tsx","mtime":1530683314454},{"path":"G:\\外包\\Metro\\Metro\\node_modules\\cache-loader\\dist\\cjs.js","mtime":0},{"path":"G:\\外包\\Metro\\Metro\\node_modules\\thread-loader\\dist\\cjs.js","mtime":0},{"path":"G:\\外包\\Metro\\Metro\\node_modules\\ts-loader\\index.js","mtime":1528433923000}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst React = require(\"react\");\r\nconst ReactHighcharts = require(\"react-highcharts\");\r\nrequire(\"./CheckInCard.scss\");\r\nconst components_1 = require(\"src/components\");\r\nconst tableConst_1 = require(\"../../../constant/tableConst\");\r\nclass CheckInCard extends React.Component {\r\n    render() {\r\n        const { data, timeRange } = this.props;\r\n        let fromDate = new Date(timeRange[0]).toLocaleDateString();\r\n        let toDate = new Date(timeRange[1]).toLocaleDateString();\r\n        let fromMonth = new Date(timeRange[0]).getMonth() + 1;\r\n        const { hourDivided, duration, count, informations } = data;\r\n        let categories = [];\r\n        let datas = [];\r\n        tableConst_1.hoursList.map(hour => {\r\n            let currentHour = hourDivided && hourDivided.find(item => item.key == hour);\r\n            categories.push(`${hour}点`);\r\n            datas.push(currentHour ? currentHour.value : 0);\r\n        });\r\n        const line = {\r\n            chart: {\r\n                type: 'column',\r\n                backgroundColor: '#030B1E',\r\n            },\r\n            title: {\r\n                text: '巡检信息',\r\n                style: {\r\n                    color: '#ffffff'\r\n                }\r\n            },\r\n            xAxis: {\r\n                categories: categories,\r\n                lables: {\r\n                    style: {\r\n                        color: '#ffffff'\r\n                    }\r\n                }\r\n            },\r\n            yAxis: {\r\n                title: {\r\n                    text: '巡检信息',\r\n                    style: {\r\n                        color: '#ffffff'\r\n                    }\r\n                },\r\n                lables: {\r\n                    style: {\r\n                        color: '#ffffff'\r\n                    }\r\n                }\r\n            },\r\n            plotOptions: {\r\n                line: {\r\n                    dataLabels: {\r\n                        // 开启数据标签\r\n                        enabled: true\r\n                    },\r\n                    // 关闭鼠标跟踪，对应的提示框、点击事件会失效\r\n                    enableMouseTracking: false\r\n                }\r\n            },\r\n            series: [{\r\n                    name: '时间',\r\n                    data: datas\r\n                }],\r\n            legend: {\r\n                itemStyle: {\r\n                    color: '#ffffff'\r\n                }\r\n            },\r\n            colors: ['#63DFFB']\r\n        };\r\n        // const cyclic = {\r\n        //   chart: {\r\n        //     spacing: [40, 0, 40, 0],\r\n        //     backgroundColor : '#030B1E',\r\n        //   },\r\n        //   title: {\r\n        //     floating: true,\r\n        //     text: '圆心显示的标题'\r\n        //   },\r\n        //   tooltip: {\r\n        //     pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\r\n        //   },\r\n        //   plotOptions: {\r\n        //     pie: {\r\n        //       allowPointSelect: true,\r\n        //       cursor: 'pointer',\r\n        //       dataLabels: {\r\n        //         enabled: true,\r\n        //         format: '<b>{point.name}</b>: {point.percentage:.1f} %',\r\n        //         style: {\r\n        //           color: 'black'\r\n        //         }\r\n        //       }\r\n        //     }\r\n        //   },\r\n        //   series: [{\r\n        //     type: 'pie',\r\n        //     innerSize: '80%',\r\n        //     name: '市场份额',\r\n        //     data: [\r\n        //       { name: 'Firefox', y: 45.0, url: 'http://bbs.hcharts.cn' },\r\n        //       ['IE', 26.8],\r\n        //       {\r\n        //         name: 'Chrome',\r\n        //         y: 12.8,\r\n        //         sliced: true,\r\n        //         selected: true,\r\n        //         url: 'http://www.hcharts.cn'\r\n        //       },\r\n        //       ['Safari', 8.5],\r\n        //       ['Opera', 6.2],\r\n        //       ['其他', 0.7]\r\n        //     ]\r\n        //   }]\r\n        // }\r\n        return React.createElement(\"div\", { style: { marginBottom: 30 } },\r\n            React.createElement(components_1.Card, { className: 'equip-card', title: '\\u5DE1\\u68C0\\u4FE1\\u606F' },\r\n                React.createElement(\"div\", { style: { minWidth: '220px', width: '50%' } },\r\n                    hourDivided && hourDivided.length ?\r\n                        React.createElement(ReactHighcharts, { config: line })\r\n                        :\r\n                            React.createElement(\"div\", { style: { textAlign: 'center', margin: '50px 0', color: '#827f7f' } }, \" \\u6682\\u65E0\\u5DE1\\u68C0\\u4FE1\\u606F\"),\r\n                    informations && informations.length ?\r\n                        React.createElement(\"div\", { style: { padding: '20px 40px' } },\r\n                            fromMonth,\r\n                            \"\\u6708\\u79FB\\u52A8\\u70B9\\u5DE1\\u68C0\\u7CFB\\u7EDF\\u5171\\u8BA1\\u5904\\u7406\",\r\n                            informations[0].polling_num,\r\n                            \"\\u6B21\\u70B9\\u5DE1\\u68C0\\u4F5C\\u4E1A\\uFF0C \\u5171\\u8BA1\\u8017\\u65F6\",\r\n                            (informations[0].polling_duration).toFixed(2),\r\n                            \"\\u5206\\u949F\\uFF0C \\u5E73\\u5747\\u6BCF\\u6B21\\u5DE1\\u68C0\\u8017\\u65F6\",\r\n                            informations[0].polling_avg_duration.toFixed(2),\r\n                            \"\\u5206\\u949F\\u3002\") : ''),\r\n                React.createElement(\"div\", { style: { minWidth: '220px', width: '50%' } }, duration !== null ?\r\n                    React.createElement(\"div\", { style: { margin: '40px 0 0', textAlign: 'center' } },\r\n                        React.createElement(\"div\", { className: \"frequent\", style: { fontSize: '60px', color: '#3cc5d4' } }, duration),\r\n                        React.createElement(\"div\", { className: \"text\", style: { fontSize: '30px' } }, \"\\u5E73\\u5747\\u65F6\\u957F\"),\r\n                        React.createElement(\"div\", null,\r\n                            \"\\u4ECA\\u65E5\\u79FB\\u52A8\\u5DE1\\u68C0\\u5171 \",\r\n                            count || 0,\r\n                            \" \\u8D77\"))\r\n                    :\r\n                        React.createElement(\"div\", { style: { textAlign: 'center', margin: '50px 0', color: '#827f7f' } }, \"\\u6682\\u65E0\\u5E73\\u5747\\u65F6\\u957F\\u4FE1\\u606F\"))));\r\n    }\r\n}\r\nexports.CheckInCard = CheckInCard;\r\n",{"version":3,"file":"G:\\外包\\Metro\\Metro\\src\\pages\\Reports\\ReportCard\\CheckInCard.tsx","sourceRoot":"","sources":["G:\\外包\\Metro\\Metro\\src\\pages\\Reports\\ReportCard\\CheckInCard.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport * as ReactHighcharts from 'react-highcharts';\r\nimport './CheckInCard.scss';\r\nimport { Card } from 'src/components';\r\nimport { relative } from 'path';\r\nimport { Divider } from 'antd';\r\nimport {hoursList} from '../../../constant/tableConst';\r\n\r\ninterface Props {\r\n<<<<<<< HEAD\r\n  data: any,\r\n=======\r\n  data: any\r\n>>>>>>> 685cb8a84e94b05eff3b7981cd14ec618b04dbe9\r\n  timeRange: any\r\n}\r\nexport class CheckInCard extends React.Component<Props> {\r\n  render() {\r\n    const {data, timeRange} = this.props;\r\n    let fromDate = new Date(timeRange[0]).toLocaleDateString();\r\n    let toDate = new Date(timeRange[1]).toLocaleDateString();\r\n    let fromMonth = new Date(timeRange[0]).getMonth() + 1;\r\n    const { hourDivided, duration, count, informations } = data;\r\n    let categories = [];\r\n    let datas =[];\r\n\r\n    hoursList.map(hour => {\r\n      let currentHour = hourDivided && hourDivided.find(item => item.key == hour);\r\n      categories.push(`${hour}点`);\r\n      datas.push(currentHour ? currentHour.value : 0)\r\n    })\r\n\r\n    const line = {\r\n      chart: {\r\n        type: 'column',\r\n        backgroundColor : '#030B1E',\r\n      },\r\n      title: {\r\n        text: '巡检信息',\r\n        style: {\r\n          color: '#ffffff'\r\n        }\r\n      },\r\n      xAxis: {\r\n        categories: categories,\r\n        lables: {\r\n          style: {\r\n            color: '#ffffff'\r\n          }\r\n        }\r\n      },\r\n      yAxis: {\r\n        title: {\r\n          text: '巡检信息',\r\n          style: {\r\n            color: '#ffffff'\r\n          }\r\n        },\r\n        lables: {\r\n          style: {\r\n            color: '#ffffff'\r\n          }\r\n        }\r\n      },\r\n      plotOptions: {\r\n        line: {\r\n          dataLabels: {\r\n            // 开启数据标签\r\n            enabled: true\r\n          },\r\n          // 关闭鼠标跟踪，对应的提示框、点击事件会失效\r\n          enableMouseTracking: false\r\n        }\r\n      },\r\n      series: [{\r\n        name: '时间',\r\n        data: datas\r\n      }],\r\n      legend: {\r\n        itemStyle: {\r\n          color: '#ffffff'\r\n        }\r\n      },\r\n      colors: ['#63DFFB']\r\n    }\r\n\r\n    // const cyclic = {\r\n    //   chart: {\r\n    //     spacing: [40, 0, 40, 0],\r\n    //     backgroundColor : '#030B1E',\r\n    //   },\r\n    //   title: {\r\n    //     floating: true,\r\n    //     text: '圆心显示的标题'\r\n    //   },\r\n    //   tooltip: {\r\n    //     pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\r\n    //   },\r\n    //   plotOptions: {\r\n    //     pie: {\r\n    //       allowPointSelect: true,\r\n    //       cursor: 'pointer',\r\n    //       dataLabels: {\r\n    //         enabled: true,\r\n    //         format: '<b>{point.name}</b>: {point.percentage:.1f} %',\r\n    //         style: {\r\n    //           color: 'black'\r\n    //         }\r\n    //       }\r\n    //     }\r\n    //   },\r\n    //   series: [{\r\n    //     type: 'pie',\r\n    //     innerSize: '80%',\r\n    //     name: '市场份额',\r\n    //     data: [\r\n    //       { name: 'Firefox', y: 45.0, url: 'http://bbs.hcharts.cn' },\r\n    //       ['IE', 26.8],\r\n    //       {\r\n    //         name: 'Chrome',\r\n    //         y: 12.8,\r\n    //         sliced: true,\r\n    //         selected: true,\r\n    //         url: 'http://www.hcharts.cn'\r\n    //       },\r\n    //       ['Safari', 8.5],\r\n    //       ['Opera', 6.2],\r\n    //       ['其他', 0.7]\r\n    //     ]\r\n    //   }]\r\n    // }\r\n\r\n    return <div style={{marginBottom: 30}}>\r\n      <Card className='equip-card' title='巡检信息'>\r\n        <div style={{ minWidth: '220px', width: '50%' }}>\r\n          {hourDivided && hourDivided.length ?\r\n            <ReactHighcharts config={line} />\r\n            :\r\n            <div style={{ textAlign: 'center', margin: '50px 0', color: '#827f7f' }}> 暂无巡检信息</div>\r\n          }\r\n          {informations && informations.length ?\r\n            <div style={{padding: '20px 40px'}}>\r\n              {fromMonth}月移动点巡检系统共计处理\r\n              {informations[0].polling_num}次点巡检作业，\r\n              共计耗时{(informations[0].polling_duration).toFixed(2)}分钟，\r\n              平均每次巡检耗时{informations[0].polling_avg_duration.toFixed(2)}分钟。\r\n            </div> : ''\r\n          }\r\n        </div>\r\n        <div style={{ minWidth: '220px', width: '50%' }}>\r\n          {\r\n            duration !==null ? \r\n            <div style={{ margin: '40px 0 0', textAlign: 'center'}}>\r\n              <div className=\"frequent\" style={{fontSize: '60px', color: '#3cc5d4'}}>{duration}</div>\r\n              <div className=\"text\" style={{fontSize: '30px'}}>平均时长</div>\r\n              <div>今日移动巡检共 {count || 0} 起</div>\r\n          </div>\r\n            :\r\n            <div style={{textAlign: 'center', margin: '50px 0', color: '#827f7f'}}>暂无平均时长信息</div>\r\n          }\r\n        </div> \r\n        \r\n          \r\n      </Card>\r\n    </div>\r\n  }\r\n}"]}]}