{"remainingRequest":"/Users/zhangmuren/project/Metro/node_modules/thread-loader/dist/cjs.js??ref--4-1!/Users/zhangmuren/project/Metro/node_modules/ts-loader/index.js??ref--4-2!/Users/zhangmuren/project/Metro/src/pages/Frame/index.tsx","dependencies":[{"path":"/Users/zhangmuren/project/Metro/src/pages/Frame/index.tsx","mtime":1529850203000},{"path":"/Users/zhangmuren/project/Metro/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/zhangmuren/project/Metro/node_modules/thread-loader/dist/cjs.js","mtime":0},{"path":"/Users/zhangmuren/project/Metro/node_modules/ts-loader/index.js","mtime":1528433923000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst React = require(\"react\");\nconst react_router_1 = require(\"react-router\");\nconst antd_1 = require(\"antd\");\nconst isLogin_1 = require(\"../../utils/isLogin\");\nrequire(\"./Frame.scss\");\nconst MenuItemGroup = antd_1.Menu.ItemGroup;\nclass Frame extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            types: {\n                \"/metaCenter\": { title: '元数据中心', icon_type: 'database', title_icon: '../../img/icons-11.png' },\n                \"/reports\": { title: '报表管理', icon_type: 'area-chart', title_icon: '../../img/icons-12.png' },\n                \"/logs\": { title: '日志管理', icon_type: 'profile', title_icon: '../../img/icons-13.png' }\n            }\n        };\n        this.handleRouting = item => {\n            // this.setState()\n            react_router_1.browserHistory.push(item.key);\n        };\n        this.handleLogout = () => {\n            react_router_1.browserHistory.push('/login');\n        };\n        this.renderAvatar = () => {\n            return React.createElement(\"div\", { style: { width: 55, cursor: 'pointer' }, onClick: this.handleLogout },\n                React.createElement(antd_1.Icon, { type: \"logout\" }),\n                \"\\u6CE8\\u9500\");\n        };\n        this.renderMenu = () => {\n            let { types } = this.state;\n            let typeList = Object.entries(types);\n            let menus = [];\n            typeList.map(type => {\n                menus.push(React.createElement(antd_1.Menu.Item, { key: type[0] },\n                    React.createElement(antd_1.Icon, { type: types && type[1].icon_type }),\n                    types && type[1].title));\n            });\n            return menus;\n        };\n    }\n    componentWillMount() {\n        if (!isLogin_1.env.logStatus) {\n            react_router_1.browserHistory.push('/login');\n        }\n    }\n    render() {\n        const { location: { pathname } } = this.props;\n        const { types } = this.state;\n        return React.createElement(\"div\", { className: \"frame\" },\n            React.createElement(antd_1.Menu, { onClick: this.handleRouting, className: \"left-menu\", selectedKeys: [pathname] },\n                React.createElement(MenuItemGroup, { title: React.createElement(React.Fragment, null,\n                        React.createElement(\"div\", { className: \"frame-menu-icon\" }),\n                        \"\\u6570\\u636E\\u7BA1\\u7406\\u5E73\\u53F0\") }, this.renderMenu())),\n            React.createElement(\"div\", { className: \"content\" },\n                React.createElement(\"div\", { className: \"header\" },\n                    React.createElement(antd_1.Popover, { placement: \"bottomRight\", content: this.renderAvatar() },\n                        React.createElement(antd_1.Avatar, { icon: \"user\", style: { marginLeft: 'auto', marginRight: 20, marginTop: 15, float: 'right' } }))),\n                React.createElement(\"div\", { className: \"container\" },\n                    React.createElement(\"div\", { className: \"container-title\" },\n                        React.createElement(\"div\", { style: { background: !types[pathname] ? '' : `url(${types[pathname]['title_icon']})` } }),\n                        React.createElement(\"span\", { className: \"container-title\" }, this.state.types[pathname] && this.state.types[pathname].title)),\n                    this.props.children)));\n    }\n}\nexports.default = Frame;\n",{"version":3,"file":"/Users/zhangmuren/project/Metro/src/pages/Frame/index.tsx","sourceRoot":"","sources":["/Users/zhangmuren/project/Metro/src/pages/Frame/index.tsx"],"names":[],"mappings":";;AAAA,+BAA+B;AAC/B,+CAAmE;AACnE,+BAAmD;AACnD,iDAA0C;AAC1C,wBAAsB;AACtB,MAAM,aAAa,GAAG,WAAI,CAAC,SAAS,CAAC;AAErC,WAA2B,SAAQ,KAAK,CAAC,SAAwC;IAAjF;;QACE,UAAK,GAAG;YACN,KAAK,EAAE;gBACL,aAAa,EAAE,EAAC,KAAK,EAAE,OAAO,EAAE,SAAS,EAAE,UAAU,EAAE,UAAU,EAAE,wBAAwB,EAAC;gBAC5F,UAAU,EAAE,EAAC,KAAK,EAAE,MAAM,EAAE,SAAS,EAAE,YAAY,EAAE,UAAU,EAAE,wBAAwB,EAAC;gBAC1F,OAAO,EAAE,EAAC,KAAK,EAAE,MAAM,EAAE,SAAS,EAAE,SAAS,EAAE,UAAU,EAAE,wBAAwB,EAAC;aACrF;SACF,CAAA;QAOD,kBAAa,GAAG,IAAI,CAAC,EAAE;YACrB,kBAAkB;YAClB,6BAAc,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAChC,CAAC,CAAA;QAED,iBAAY,GAAG,GAAG,EAAE;YAClB,6BAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAChC,CAAC,CAAA;QAED,iBAAY,GAAG,GAAG,EAAE;YAClB,OAAO,6BAAK,KAAK,EAAE,EAAC,KAAK,EAAE,EAAE,EAAE,MAAM,EAAE,SAAS,EAAC,EAAE,OAAO,EAAE,IAAI,CAAC,YAAY;gBAC3E,oBAAC,WAAI,IAAC,IAAI,EAAC,QAAQ,GAAE;+BACjB,CAAA;QACR,CAAC,CAAA;QAED,eAAU,GAAG,GAAG,EAAE;YAChB,IAAI,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;YAC3B,IAAI,QAAQ,GAAG,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;YACrC,IAAI,KAAK,GAAG,EAAE,CAAC;YACb,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;gBAClB,KAAK,CAAC,IAAI,CAAC,oBAAC,WAAI,CAAC,IAAI,IAAC,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC;oBAAE,oBAAC,WAAI,IAAC,IAAI,EAAE,KAAK,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,SAAS,GAAI;oBAAC,KAAK,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAa,CAAC,CAAA;YACrH,CAAC,CAAC,CAAA;YACJ,OAAO,KAAK,CAAC;QACf,CAAC,CAAA;IA2BH,CAAC;IAvDC,kBAAkB;QAChB,IAAI,CAAC,aAAG,CAAC,SAAS,EAAE;YAClB,6BAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SAC/B;IACH,CAAC;IA0BD,MAAM;QACJ,MAAM,EAAC,QAAQ,EAAC,EAAC,QAAQ,EAAC,EAAC,GAAG,IAAI,CAAC,KAAK,CAAC;QACzC,MAAM,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;QAC7B,OAAO,6BAAK,SAAS,EAAC,OAAO;YAC3B,oBAAC,WAAI,IAAC,OAAO,EAAE,IAAI,CAAC,aAAa,EAAE,SAAS,EAAC,WAAW,EAAC,YAAY,EAAE,CAAC,QAAQ,CAAC;gBAC/E,oBAAC,aAAa,IAAC,KAAK,EAAE;wBAAE,6BAAK,SAAS,EAAC,iBAAiB,GAAE;+DAAS,IAChE,IAAI,CAAC,UAAU,EAAE,CACJ,CACX;YACP,6BAAK,SAAS,EAAC,SAAS;gBACtB,6BAAK,SAAS,EAAC,QAAQ;oBACrB,oBAAC,cAAO,IAAC,SAAS,EAAC,aAAa,EAAC,OAAO,EAAE,IAAI,CAAC,YAAY,EAAE;wBAC3D,oBAAC,aAAM,IAAC,IAAI,EAAC,MAAM,EAAC,KAAK,EAAE,EAAC,UAAU,EAAE,MAAM,EAAE,WAAW,EAAE,EAAE,EAAE,SAAS,EAAE,EAAE,EAAE,KAAK,EAAE,OAAO,EAAC,GAAG,CAC1F,CACN;gBACN,6BAAK,SAAS,EAAC,WAAW;oBACxB,6BAAK,SAAS,EAAC,iBAAiB;wBAC9B,6BAAK,KAAK,EAAE,EAAC,UAAU,EAAE,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,KAAK,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,GAAG,EAAC,GAAQ;wBACjG,8BAAM,SAAS,EAAC,iBAAiB,IAAE,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAQ,CACrG;oBACL,IAAI,CAAC,KAAK,CAAC,QAAQ,CAChB,CACF,CACF,CAAA;IACR,CAAC;CACF;AAhED,wBAgEC","sourcesContent":["import * as React from 'react';\nimport { browserHistory, RouteComponentProps } from 'react-router';\nimport { Menu, Icon, Avatar, Popover } from 'antd';\nimport { env } from '../../utils/isLogin';\nimport './Frame.scss';\nconst MenuItemGroup = Menu.ItemGroup;\n\nexport default class Frame extends React.Component<RouteComponentProps<any, any>> {\n  state = {\n    types: {\n      \"/metaCenter\": {title: '元数据中心', icon_type: 'database', title_icon: '../../img/icons-11.png'},\n      \"/reports\": {title: '报表管理', icon_type: 'area-chart', title_icon: '../../img/icons-12.png'},\n      \"/logs\": {title: '日志管理', icon_type: 'profile', title_icon: '../../img/icons-13.png'}\n    }\n  }\n\n  componentWillMount() {\n    if (!env.logStatus) {\n      browserHistory.push('/login');\n    }\n  }\n  handleRouting = item => {\n    // this.setState()\n    browserHistory.push(item.key);\n  }\n\n  handleLogout = () => {\n    browserHistory.push('/login');\n  }\n\n  renderAvatar = () => {\n    return <div style={{width: 55, cursor: 'pointer'}} onClick={this.handleLogout}>\n      <Icon type=\"logout\"/>注销\n    </div>\n  }\n\n  renderMenu = () => {\n    let { types } = this.state;\n    let typeList = Object.entries(types);\n    let menus = [];\n      typeList.map(type => {\n        menus.push(<Menu.Item key={type[0]}><Icon type={types && type[1].icon_type} />{types && type[1].title}</Menu.Item>)\n      })\n    return menus;\n  }\n\n  render() {\n    const {location:{pathname}} = this.props;\n    const { types } = this.state;\n    return <div className=\"frame\">\n      <Menu onClick={this.handleRouting} className=\"left-menu\" selectedKeys={[pathname]}>\n        <MenuItemGroup title={<><div className=\"frame-menu-icon\"/>数据管理平台</>}>\n          {this.renderMenu()}\n        </MenuItemGroup>\n      </Menu>\n      <div className=\"content\">\n        <div className=\"header\">\n          <Popover placement=\"bottomRight\" content={this.renderAvatar()}>\n            <Avatar icon=\"user\" style={{marginLeft: 'auto', marginRight: 20, marginTop: 15, float: 'right'}}/>\n          </Popover>\n        </div>\n        <div className=\"container\">\n          <div className=\"container-title\">\n            <div style={{background: !types[pathname] ? '' : `url(${types[pathname]['title_icon']})`}}></div>\n            <span className=\"container-title\">{this.state.types[pathname] && this.state.types[pathname].title}</span>\n          </div>\n          {this.props.children}\n        </div>\n      </div>\n    </div>\n  }\n}"]}]}