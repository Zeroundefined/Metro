{"remainingRequest":"/Users/zhangmuren/project/Metro/node_modules/thread-loader/dist/cjs.js??ref--4-1!/Users/zhangmuren/project/Metro/node_modules/ts-loader/index.js??ref--4-2!/Users/zhangmuren/project/Metro/src/pages/Reports/ReportCard/WorkingCard.tsx","dependencies":[{"path":"/Users/zhangmuren/project/Metro/src/pages/Reports/ReportCard/WorkingCard.tsx","mtime":1530424825000},{"path":"/Users/zhangmuren/project/Metro/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/zhangmuren/project/Metro/node_modules/thread-loader/dist/cjs.js","mtime":0},{"path":"/Users/zhangmuren/project/Metro/node_modules/ts-loader/index.js","mtime":1528433923000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst React = require(\"react\");\nconst ReactHighcharts = require(\"react-highcharts\");\nconst components_1 = require(\"../../../components\");\nrequire(\"./WorkingCard.scss\");\nconst tableConst_1 = require(\"../../../constant/tableConst\");\nclass WorkingCard extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.fixNumber = num => {\n            return num && Number((num * 100).toFixed(2));\n        };\n        this.handleReachRatioConfig = () => {\n            const { data } = this.props;\n            let { reachRatio } = data;\n            return {\n                chart: {\n                    backgroundColor: '#030B1E'\n                },\n                title: {\n                    text: '施工计划兑现率',\n                    style: {\n                        color: '#ffffff'\n                    }\n                },\n                colors: ['#40a9ff', 'rgba(0,0,0,0.05)'],\n                series: [{\n                        type: 'pie',\n                        data: [\n                            {\n                                name: '施工计划兑现率',\n                                y: this.fixNumber(reachRatio),\n                                sliced: true,\n                                dataLabels: {\n                                    enabled: true,\n                                    format: '<b>{point.name}</b>: {point.percentage:.1f} %',\n                                    style: {\n                                        color: '#ffffff'\n                                    }\n                                },\n                                color: '#4B99A5'\n                            },\n                            {\n                                name: 'Useless',\n                                y: this.fixNumber(1 - reachRatio),\n                                dataLabels: {\n                                    enabled: false,\n                                },\n                            },\n                        ]\n                    }]\n            };\n        };\n        this.handleWorkingTimeRateConfig = () => {\n            const { data } = this.props;\n            let { hourRatio } = data;\n            return {\n                chart: {\n                    backgroundColor: '#030B1E'\n                },\n                title: {\n                    text: '施工计划工时利用率',\n                    style: {\n                        color: '#ffffff'\n                    }\n                },\n                colors: ['#40a9ff', 'rgba(0,0,0,0.05)'],\n                series: [{\n                        type: 'pie',\n                        data: [\n                            {\n                                name: '施工计划工时利用率',\n                                y: this.fixNumber(hourRatio),\n                                sliced: true,\n                                dataLabels: {\n                                    enabled: false,\n                                },\n                                color: '#DF5A5A'\n                            },\n                            {\n                                name: 'Userless',\n                                y: this.fixNumber(1 - hourRatio),\n                                dataLabels: {\n                                    enabled: false,\n                                    format: '<b>{point.name}</b>: {point.percentage:.1f} %',\n                                },\n                            },\n                        ]\n                    }]\n            };\n        };\n        this.handleUpdateRatioConfig = () => {\n            const { data } = this.props;\n            let { updateRatio } = data;\n            return {\n                chart: {\n                    backgroundColor: '#030B1E'\n                },\n                title: {\n                    text: '施工计划变更率',\n                    style: {\n                        color: '#ffffff'\n                    }\n                },\n                colors: ['#40a9ff', 'rgba(0,0,0,0.05)'],\n                series: [{\n                        type: 'pie',\n                        data: [\n                            {\n                                name: '施工计划变更率',\n                                y: this.fixNumber(updateRatio),\n                                sliced: true,\n                                dataLabels: {\n                                    enabled: true,\n                                    format: '<b>{point.name}</b>: {point.percentage:.1f} %',\n                                },\n                                color: '#6BB582'\n                            },\n                            {\n                                name: 'Useless',\n                                y: this.fixNumber(1 - updateRatio),\n                                dataLabels: {\n                                    enabled: false,\n                                },\n                            },\n                        ]\n                    }]\n            };\n        };\n        this.handleLineDividedConfig = () => {\n            const { data } = this.props;\n            const lineDivided = data.lineDivided;\n            const list = [];\n            const lineWorking = [];\n            const categories = [\n                '一号线', '二号线', '三号线', '四号线', '五号线', '六号线', '七号线', '八号线', '九号线', '十号线', '十一号线', '十二号线', '十三号线', '十四号线', '十五号线', '十六号线', '十七号线'\n            ];\n            if (lineDivided) {\n                tableConst_1.linesList.map(line => {\n                    let currentLine = lineDivided.find(item => item.line == line.id);\n                    list.push(currentLine ? currentLine['count'] : '0');\n                    lineWorking.push(`${line.name}${currentLine ? currentLine['count'] : '0'}`);\n                });\n            }\n            return [{\n                    chart: {\n                        type: 'column',\n                        backgroundColor: '#030B1E',\n                    },\n                    title: {\n                        text: '施工数量(路线)',\n                        style: {\n                            color: '#ffffff'\n                        }\n                    },\n                    xAxis: {\n                        categories,\n                        crosshair: true\n                    },\n                    yAxis: {\n                        min: 0,\n                        title: {\n                            text: '施工数量',\n                            style: {\n                                color: '#ffffff'\n                            }\n                        }\n                    },\n                    tooltip: {\n                        // head + 每个 point + footer 拼接成完整的 table\n                        headerFormat: `<span style='font-size:10px'>{point.key}</span><table>`,\n                        pointFormat: `<tr><td style='color:{series.color};padding:0'>{series.name}: </td>' +\n          '<td style='padding:0'><b>{point.y:.1f} mm</b></td></tr>`,\n                        footerFormat: '</table>',\n                        shared: true,\n                        useHTML: true\n                    },\n                    plotOptions: {\n                        column: {\n                            colorByPoint: true\n                        }\n                    },\n                    series: [{\n                            data: list,\n                        }],\n                    colors: ['#CE0000', '#8BCB1F', '#FECD06', '#502E84', '#9A52A4', '#E80378', '#F66F15', '#089BDE', '#7DC8E8', '#B1A0C4', '#8E162F', '#03795F', '#E794BF', '#89CFBD', '#BB786F']\n                }, lineWorking.join(',')];\n        };\n        this.handleHourDividedConfig = () => {\n            const { data } = this.props;\n            let { hourDivided } = data;\n            let categories = [];\n            let datas = [];\n            tableConst_1.hoursList.map(hour => {\n                let currentHour = hourDivided.find(item => item.hour == hour);\n                categories.push(`${hour}点`);\n                datas.push(currentHour ? currentHour.count : 0);\n            });\n            // hourDivided && hourDivided.map(divid => {\n            //   categories.push(divid.key);\n            //   datas.push(divid.value)\n            // })\n            return {\n                chart: {\n                    type: 'area',\n                    backgroundColor: '#030B1E'\n                },\n                title: {\n                    text: '施工数量（每小时）',\n                    style: {\n                        color: '#ffffff'\n                    }\n                },\n                xAxis: {\n                    allowDecimals: false,\n                    categories: categories,\n                },\n                yAxis: {\n                    title: {\n                        text: '施工小时',\n                        style: {\n                            color: '#ffffff'\n                        }\n                    },\n                    labels: {\n                        formatter: function () {\n                            return this.value + 'h';\n                        }\n                    }\n                },\n                series: [{\n                        data: datas\n                    }],\n                colors: ['#f5ab24']\n            };\n        };\n    }\n    render() {\n        const { data } = this.props;\n        const { reachRatio, hourRatio, updateRatio, illegal, hourDivided } = data;\n        let [LineDividedConfig, lineWorking] = this.handleLineDividedConfig();\n        return React.createElement(components_1.Card, { className: 'working-card', title: '\\u65BD\\u5DE5\\u6A21\\u5757', style: { marginBottom: 30 } },\n            React.createElement(\"div\", { style: { minWidth: '220px', width: '50%' } }, reachRatio !== null ? React.createElement(ReactHighcharts, { config: this.handleReachRatioConfig() }) : React.createElement(\"div\", { style: { textAlign: 'center', margin: '50px 0', color: '#827f7f' } }, \"\\u6682\\u65E0\\u65BD\\u5DE5\\u8BA1\\u5212\\u5151\\u73B0\\u7387\")),\n            React.createElement(\"div\", { style: { minWidth: '220px', width: '50%' } }, hourRatio !== null ? React.createElement(ReactHighcharts, { config: this.handleWorkingTimeRateConfig() }) : React.createElement(\"div\", { style: { textAlign: 'center', margin: '50px 0', color: '#827f7f' } }, \"\\u6682\\u65E0\\u65BD\\u5DE5\\u8BA1\\u5212\\u5DE5\\u65F6\\u5229\\u7528\\u7387\")),\n            React.createElement(\"div\", { style: { minWidth: '220px', width: '50%' } }, updateRatio !== null ? React.createElement(ReactHighcharts, { config: this.handleUpdateRatioConfig() }) : React.createElement(\"div\", { style: { textAlign: 'center', margin: '50px 0', color: '#827f7f' } }, \"\\u6682\\u65E0\\u65BD\\u5DE5\\u8BA1\\u5212\\u53D8\\u66F4\\u7387\")),\n            React.createElement(\"div\", { style: { minWidth: '220px', width: '50%' } }, illegal ?\n                React.createElement(\"div\", { className: \"illegal\", style: { textAlign: 'center', margin: 'auto', minHeight: '220px' } },\n                    React.createElement(\"div\", { className: \"text\", style: { color: '#333333', fontSize: '18px' } }, \"\\u65BD\\u5DE5\\u8FDD\\u89C4\\u9879\"),\n                    React.createElement(\"div\", { className: \"content\", style: { color: '#3cc5d4', marginTop: '40px', fontSize: '30px' } },\n                        \"\\u8FDD\\u89C4\\u65BD\\u5DE5\",\n                        React.createElement(\"span\", { style: { margin: '0 10px', fontSize: '50px', color: '#f5be25' } }, data.illegal),\n                        \"\\u8D77\")) :\n                React.createElement(\"div\", { style: { textAlign: 'center', margin: '50px 0', color: '#827f7f' } }, \"\\u6682\\u65E0\\u65BD\\u5DE5\\u8FDD\\u89C4\\u6570\\u636E\")),\n            React.createElement(\"div\", { style: { minWidth: '220px', width: '50%' } },\n                React.createElement(ReactHighcharts, { config: LineDividedConfig }),\n                React.createElement(\"div\", { style: { padding: '20px 40px' } },\n                    \"\\u5404\\u7EBF\\u8DEF\\u65BD\\u5DE5\\u6570\",\n                    lineWorking)),\n            React.createElement(\"div\", { style: { minWidth: '220px', width: '50%' } }, hourDivided && hourDivided.length ?\n                React.createElement(\"div\", null,\n                    React.createElement(ReactHighcharts, { config: this.handleHourDividedConfig() }),\n                    React.createElement(\"div\", { style: { padding: '20px 40px' } }, \"XX\\u5E74XX\\u6708\\u65BD\\u5DE5\\u7BA1\\u7406\\u7CFB\\u7EDF\\u5171\\u529E\\u7406XX\\u8D77\\u65BD\\u5DE5\\uFF0C\\u5176\\u4E2D\\u65E5\\u5E38\\u5DE1\\u68C0\\u65BD\\u5DE5XX\\u8D77\\uFF0C\\u9879\\u76EE\\u65BD\\u5DE5XX\\u8D77\\uFF0C\\u4E8C\\u7EA7\\u91CD\\u5927\\u65BD\\u5DE5XX\\u8D77\\u3002\\u65BD\\u5DE5\\u5151\\u73B0\\u7387XX\\uFF0C\\u5DE5\\u65F6\\u5229\\u7528\\u7387XX\\uFF0C\\u5B9E\\u65BD\\u89C4\\u8303\\u7387XX\\uFF0C\\u8BA1\\u5212\\u53D8\\u66F4\\u7387XX\\u3002\")) :\n                React.createElement(\"div\", { style: { textAlign: 'center', margin: '50px 0', color: '#827f7f' } }, \"\\u6682\\u65E0\\u65BD\\u5DE5\\u6570\\u91CF\")));\n    }\n}\nexports.WorkingCard = WorkingCard;\n",{"version":3,"file":"/Users/zhangmuren/project/Metro/src/pages/Reports/ReportCard/WorkingCard.tsx","sourceRoot":"","sources":["/Users/zhangmuren/project/Metro/src/pages/Reports/ReportCard/WorkingCard.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as ReactHighcharts from 'react-highcharts';\nimport { Card } from '../../../components';\nimport './WorkingCard.scss';\nimport { Divider } from 'antd';\nimport {linesList, hoursList} from '../../../constant/tableConst';\n\ninterface Props {\n  data: any;\n}\n\nexport class WorkingCard extends React.Component<Props> {\n  fixNumber = num => {\n    return num && Number((num * 100).toFixed(2))\n  }\n  handleReachRatioConfig = () => {\n    const { data } = this.props;\n    let { reachRatio } = data;\n    return {\n      chart:{\n        backgroundColor : '#030B1E'\n      },\n      title: {\n        text: '施工计划兑现率',\n        style: {\n          color: '#ffffff'\n        }\n      },\n      colors: ['#40a9ff', 'rgba(0,0,0,0.05)'],\n      series: [{\n        type: 'pie',\n        data: [\n          {\n            name: '施工计划兑现率',\n            y: this.fixNumber(reachRatio),\n            sliced: true,\n            dataLabels: {\n              enabled: true,\n              format: '<b>{point.name}</b>: {point.percentage:.1f} %',\n                style: {\n                  color: '#ffffff'\n                }\n            },\n            color: '#4B99A5'\n          },\n          {\n            name: 'Useless',\n            y: this.fixNumber(1-reachRatio),\n            dataLabels: {\n              enabled: false,\n            },\n          },\n        ]\n      }]\n    }\n  }\n\n  handleWorkingTimeRateConfig = () => {\n    const { data } = this.props;\n    let { hourRatio } = data;\n    return {\n      chart:{\n        backgroundColor : '#030B1E'\n      },\n      title: {\n        text: '施工计划工时利用率',\n        style: {\n          color: '#ffffff'\n        }\n      },\n      colors: ['#40a9ff', 'rgba(0,0,0,0.05)'],\n      series: [{\n        type: 'pie',\n        data: [\n          {\n            name: '施工计划工时利用率',\n            y: this.fixNumber(hourRatio),\n            sliced: true,\n            dataLabels: {\n              enabled: false,\n            },\n            color: '#DF5A5A'\n          },\n          {\n            name: 'Userless',\n            y: this.fixNumber(1-hourRatio),\n            dataLabels: {\n              enabled: false,\n              format: '<b>{point.name}</b>: {point.percentage:.1f} %',\n            },\n          },\n        ]\n      }]\n    }\n  }\n\n  handleUpdateRatioConfig = () => {\n    const { data } = this.props;\n    let { updateRatio } = data;\n    return {\n      chart: {\n        backgroundColor : '#030B1E'\n      },\n      title: {\n        text: '施工计划变更率',\n        style: {\n          color: '#ffffff'\n        }\n      },\n      colors: ['#40a9ff', 'rgba(0,0,0,0.05)'],\n      series: [{\n        type: 'pie',\n        data: [\n          {\n            name: '施工计划变更率',\n            y: this.fixNumber(updateRatio),\n            sliced: true,\n            dataLabels: {\n              enabled: true,\n              format: '<b>{point.name}</b>: {point.percentage:.1f} %',\n\n            },\n            color: '#6BB582'\n          },\n          {\n            name: 'Useless',\n            y: this.fixNumber(1-updateRatio),\n            dataLabels: {\n              enabled: false,\n            },\n          },\n        ]\n      }]\n    }\n  }\n\n  handleLineDividedConfig = () => {\n    const {\n      data\n    } = this.props;\n    const lineDivided = data.lineDivided;\n    const list = [];\n    const lineWorking = [];\n    const categories = [\n      '一号线', '二号线', '三号线', '四号线', '五号线', '六号线', '七号线', '八号线', '九号线', '十号线', '十一号线', '十二号线', '十三号线', '十四号线', '十五号线', '十六号线', '十七号线'\n    ];\n    if(lineDivided) {\n      linesList.map(line => {\n        let currentLine = lineDivided.find(item => item.line == line.id);\n        list.push(currentLine ? currentLine['count'] : '0')\n        lineWorking.push(`${line.name}${currentLine ? currentLine['count'] : '0'}`)\n      })\n    }\n\n    return [{\n      chart: {\n        type: 'column',\n        backgroundColor : '#030B1E',\n      },\n      title: {\n        text: '施工数量(路线)',\n        style: {\n          color: '#ffffff'\n        }\n      },\n      xAxis: {\n        categories,\n        crosshair: true\n      },\n      yAxis: {\n        min: 0,\n        title: {\n          text: '施工数量',\n          style: {\n            color: '#ffffff'\n          }\n        }\n      },\n      tooltip: {\n        // head + 每个 point + footer 拼接成完整的 table\n        headerFormat: `<span style='font-size:10px'>{point.key}</span><table>`,\n        pointFormat: `<tr><td style='color:{series.color};padding:0'>{series.name}: </td>' +\n          '<td style='padding:0'><b>{point.y:.1f} mm</b></td></tr>`,\n        footerFormat: '</table>',\n        shared: true,\n        useHTML: true\n      },\n      plotOptions: {\n        column: {\n            colorByPoint:true\n        }\n      },\n      series: [{\n        data: list,\n      }],\n      colors: ['#CE0000', '#8BCB1F', '#FECD06', '#502E84', '#9A52A4', '#E80378', '#F66F15', '#089BDE', '#7DC8E8', '#B1A0C4', '#8E162F', '#03795F', '#E794BF', '#89CFBD', '#BB786F']\n    }, lineWorking.join(',')]\n  }\n\n  handleHourDividedConfig = () => {\n    const { data } = this.props;\n    let { hourDivided } = data;\n    let categories = [];\n    let datas =[];\n    hoursList.map(hour => {\n      let currentHour = hourDivided.find(item => item.hour == hour);\n      categories.push(`${hour}点`);\n      datas.push(currentHour ? currentHour.count : 0)\n    })\n    // hourDivided && hourDivided.map(divid => {\n    //   categories.push(divid.key);\n    //   datas.push(divid.value)\n    // })\n\n    return {\n      chart: {\n        type: 'area',\n        backgroundColor : '#030B1E'\n      },\n      title: {\n        text: '施工数量（每小时）',\n        style: {\n          color: '#ffffff'\n        }\n      },\n      xAxis: {\n        allowDecimals: false,\n        categories: categories,\n      },\n      yAxis: {\n        title: {\n          text: '施工小时',\n          style: {\n            color: '#ffffff'\n          }\n        },\n        labels: {\n          formatter: function () {\n            return this.value + 'h';\n          }\n        }\n      },\n      series: [{\n        data: datas\n      }],\n      colors: ['#f5ab24']\n    }\n  }\n\n\n\n  render() {\n    const { data } = this.props;\n    const {reachRatio, hourRatio, updateRatio, illegal, hourDivided} = data;\n    let [LineDividedConfig, lineWorking] = this.handleLineDividedConfig();\n    return <Card className='working-card' title='施工模块' style={{ marginBottom: 30}}>\n      <div style={{minWidth: '220px', width: '50%'}}>\n        {\n          reachRatio !== null ? <ReactHighcharts config={this.handleReachRatioConfig()} /> : <div style={{textAlign: 'center', margin: '50px 0', color: '#827f7f' }}>暂无施工计划兑现率</div>\n        }\n      </div>\n\n      <div style={{minWidth: '220px', width: '50%'}}>\n        {\n          hourRatio !== null ? <ReactHighcharts config={this.handleWorkingTimeRateConfig()} /> : <div style={{textAlign: 'center', margin: '50px 0', color: '#827f7f' }}>暂无施工计划工时利用率</div>\n        }\n      </div>\n\n      <div style={{minWidth: '220px', width: '50%'}}>\n        {\n          updateRatio !== null ? <ReactHighcharts config={this.handleUpdateRatioConfig()} /> : <div style={{textAlign: 'center', margin: '50px 0', color: '#827f7f' }}>暂无施工计划变更率</div> \n        }\n      </div>\n\n      <div style={{minWidth: '220px', width: '50%'}}>\n      {illegal ?\n        <div className=\"illegal\" style={{textAlign: 'center', margin: 'auto', minHeight: '220px'}}>\n          <div className=\"text\" style={{color: '#333333', fontSize: '18px'}}>施工违规项</div>\n          <div className=\"content\" style={{color: '#3cc5d4', marginTop: '40px', fontSize: '30px'}}>\n            违规施工<span style={{margin: '0 10px', fontSize: '50px', color: '#f5be25'}}>{data.illegal}</span>起</div>\n        </div>:\n        <div style={{textAlign: 'center', margin: '50px 0', color: '#827f7f' }}>暂无施工违规数据</div>\n      }\n      </div>\n\n      <div style={{minWidth: '220px', width: '50%'}}>\n        <ReactHighcharts config={LineDividedConfig} />\n        <div style={{padding: '20px 40px'}}>各线路施工数{lineWorking}</div>   \n      </div>\n      <div style={{minWidth: '220px', width: '50%'}}>\n        {hourDivided && hourDivided.length ?\n          <div>\n            <ReactHighcharts config={this.handleHourDividedConfig()} />\n            <div style={{padding: '20px 40px'}}>XX年XX月施工管理系统共办理XX起施工，其中日常巡检施工XX起，项目施工XX起，二级重大施工XX起。施工兑现率XX，工时利用率XX，实施规范率XX，计划变更率XX。</div>\n          </div> :\n          <div style={{textAlign: 'center', margin: '50px 0', color: '#827f7f' }}>暂无施工数量</div>\n        }\n      </div>\n    </Card>\n  }\n}"]}]}