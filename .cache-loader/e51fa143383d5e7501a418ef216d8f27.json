{"remainingRequest":"G:\\外包\\Metro\\Metro\\node_modules\\thread-loader\\dist\\cjs.js??ref--4-1!G:\\外包\\Metro\\Metro\\node_modules\\ts-loader\\index.js??ref--4-2!G:\\外包\\Metro\\Metro\\src\\pages\\Reports\\ReportCard\\FaultCard.tsx","dependencies":[{"path":"G:\\外包\\Metro\\Metro\\src\\pages\\Reports\\ReportCard\\FaultCard.tsx","mtime":1529848065898},{"path":"G:\\外包\\Metro\\Metro\\node_modules\\cache-loader\\dist\\cjs.js","mtime":0},{"path":"G:\\外包\\Metro\\Metro\\node_modules\\thread-loader\\dist\\cjs.js","mtime":0},{"path":"G:\\外包\\Metro\\Metro\\node_modules\\ts-loader\\index.js","mtime":1528433923000}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst React = require(\"react\");\r\nconst ReactHighcharts = require(\"react-highcharts\");\r\nconst components_1 = require(\"src/components\");\r\nclass FaultCard extends React.Component {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.handleFaultPercentConfig = () => {\r\n            /** 故障类型占比 */\r\n            const { data } = this.props;\r\n            const faultType = data.faultType || [];\r\n            const total = faultType.reduce((tol, cur) => tol + cur[1], 0);\r\n            const final = [];\r\n            faultType.map(type => {\r\n                if (type[0] == 'type_comm') {\r\n                    final.push(['故障类型-通信类', type[1] / total]);\r\n                }\r\n                if (type[0] == 'type_net') {\r\n                    final.push(['故障类型-网络类', type[1] / total]);\r\n                }\r\n                if (type[0] == 'type_signal') {\r\n                    final.push(['故障类型-信号类', type[1] / total]);\r\n                }\r\n                if (type[0] == 'type_other') {\r\n                    final.push(['故障类型-其他类', type[1] / total]);\r\n                }\r\n            });\r\n            return {\r\n                chart: {\r\n                    spacing: [40, 0, 40, 0]\r\n                },\r\n                title: {\r\n                    floating: true,\r\n                    text: '故障类型占比'\r\n                },\r\n                tooltip: {\r\n                    pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\r\n                },\r\n                plotOptions: {\r\n                    pie: {\r\n                        allowPointSelect: true,\r\n                        cursor: 'pointer',\r\n                        dataLabels: {\r\n                            enabled: true,\r\n                            format: '<b>{point.name}</b>: {point.percentage:.1f} %',\r\n                            style: {\r\n                                color: 'black'\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                series: [{\r\n                        type: 'pie',\r\n                        innerSize: '60%',\r\n                        name: '故障占比',\r\n                        data: final\r\n                    }]\r\n            };\r\n        };\r\n        this.handle24HourConfig = () => {\r\n            /** 24小时故障情况 */\r\n            const { data } = this.props;\r\n            const hourDivided = data.hourDivided;\r\n            let categories = [];\r\n            let faults = [];\r\n            hourDivided && hourDivided.map(divid => {\r\n                categories.push(divid.key);\r\n                faults.push(divid.value);\r\n            });\r\n            return {\r\n                chart: {\r\n                    type: 'area'\r\n                },\r\n                title: {\r\n                    text: '24小时故障情况'\r\n                },\r\n                xAxis: {\r\n                    allowDecimals: false,\r\n                    categories: categories,\r\n                },\r\n                yAxis: {\r\n                    title: {\r\n                        text: '故障数量'\r\n                    },\r\n                },\r\n                tooltip: {\r\n                    pointFormat: '{series.name} 发生故障 <b>{point.y:,.0f}</b>次'\r\n                },\r\n                series: [{\r\n                        name: '故障情况',\r\n                        data: faults\r\n                    }]\r\n            };\r\n        };\r\n        this.handleFaultStatusConfig = () => {\r\n            const { data } = this.props;\r\n            const final = [];\r\n            const faultHandle = data.faultHandle;\r\n            faultHandle && faultHandle.map(handle => {\r\n                if (handle[0] == 'state_closed') {\r\n                    final.push(['故障状态-已完结', handle[1]]);\r\n                }\r\n                if (handle[0] == 'state_fixed') {\r\n                    final.push(['故障状态-已修复', handle[1]]);\r\n                }\r\n                if (handle[0] == 'state_new') {\r\n                    final.push(['故障状态-新报修', handle[1]]);\r\n                }\r\n                if (handle[0] == 'state_processed') {\r\n                    final.push(['故障状态-在处理', handle[1]]);\r\n                }\r\n            });\r\n            return {\r\n                chart: {\r\n                    spacing: [40, 0, 40, 0]\r\n                },\r\n                title: {\r\n                    text: '故障处理状态',\r\n                    margin: 30\r\n                },\r\n                plotOptions: {\r\n                    pie: {\r\n                        allowPointSelect: true,\r\n                        cursor: 'pointer',\r\n                        dataLabels: {\r\n                            enabled: false\r\n                        },\r\n                        showInLegend: true\r\n                    }\r\n                },\r\n                series: [{\r\n                        type: 'pie',\r\n                        innerSize: '60%',\r\n                        name: '故障处理状态',\r\n                        data: final\r\n                    }]\r\n            };\r\n        };\r\n        this.handleLineFaultConfig = () => {\r\n            const { data } = this.props;\r\n            const lineDivided = data.lineDivided;\r\n            const final = [];\r\n            for (var i = 1; i <= 17; i++) {\r\n                final.push(lineDivided && lineDivided[`line${i}`]);\r\n            }\r\n            return {\r\n                chart: {\r\n                    type: 'column'\r\n                },\r\n                title: {\r\n                    text: '各线路故障情况'\r\n                },\r\n                xAxis: {\r\n                    categories: [\r\n                        '一号线', '二号线', '三号线', '四号线', '五号线', '六号线', '七号线', '八号线', '九号线', '十号线', '十一号线', '十二号线', '十三号线', '十四号线', '十五号线', '十六号线', '十七号线'\r\n                    ],\r\n                    crosshair: true\r\n                },\r\n                yAxis: {\r\n                    min: 0,\r\n                    title: {\r\n                        text: '故障数量（个）'\r\n                    }\r\n                },\r\n                tooltip: {\r\n                    pointFormat: '{series.name}: 发生故障<b>{point.y}个</b>'\r\n                },\r\n                plotOptions: {\r\n                    column: {\r\n                        borderWidth: 0\r\n                    }\r\n                },\r\n                series: [{\r\n                        name: '故障数量',\r\n                        data: final\r\n                    }]\r\n            };\r\n        };\r\n    }\r\n    render() {\r\n        // const {\r\n        //   data\r\n        // } = this.props;\r\n        return React.createElement(\"div\", { className: 'fault-card' },\r\n            React.createElement(components_1.Card, { className: 'equip-card', title: '\\u6545\\u969C\\u4FE1\\u606F' },\r\n                React.createElement(\"div\", { style: { minWidth: '220px', width: '50%' } },\r\n                    React.createElement(ReactHighcharts, { config: this.handleFaultPercentConfig() }),\r\n                    \" \"),\r\n                React.createElement(\"div\", { style: { minWidth: '220px', width: '50%' } },\r\n                    React.createElement(ReactHighcharts, { config: this.handle24HourConfig() }),\r\n                    \" \"),\r\n                React.createElement(\"div\", { style: { minWidth: '220px', width: '50%' } },\r\n                    React.createElement(ReactHighcharts, { config: this.handleFaultStatusConfig() })),\r\n                React.createElement(\"div\", { style: { minWidth: '220px', width: '50%' } },\r\n                    React.createElement(ReactHighcharts, { config: this.handleLineFaultConfig() }))));\r\n    }\r\n}\r\nexports.FaultCard = FaultCard;\r\n",{"version":3,"file":"G:\\外包\\Metro\\Metro\\src\\pages\\Reports\\ReportCard\\FaultCard.tsx","sourceRoot":"","sources":["G:\\外包\\Metro\\Metro\\src\\pages\\Reports\\ReportCard\\FaultCard.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as ReactHighcharts from 'react-highcharts';\nimport {\n  Card\n} from 'src/components';\ninterface Props {\n  data: any\n}\n\nexport class FaultCard extends React.Component < Props > {\n\n  handleFaultPercentConfig = () => {\n    /** 故障类型占比 */\n    const {\n      data\n    } = this.props;\n    const faultType = data.faultType || [];\n    const total = faultType.reduce((tol, cur) => tol + cur[1], 0)\n    const final = [];\n    faultType.map(type => {\n      if (type[0] == 'type_comm') {\n        final.push(['故障类型-通信类', type[1] / total]);\n      }\n      if (type[0] == 'type_net') {\n        final.push(['故障类型-网络类', type[1] / total]);\n      }\n      if (type[0]=='type_signal') {\n        final.push(['故障类型-信号类', type[1] / total]);\n      }\n      if (type[0]== 'type_other') {\n        final.push(['故障类型-其他类', type[1] / total]);\n      }\n    })\n\n    return {\n      chart: {\n        spacing: [40, 0, 40, 0]\n      },\n      title: {\n        floating: true,\n        text: '故障类型占比'\n      },\n      tooltip: {\n        pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\n      },\n      plotOptions: {\n        pie: {\n          allowPointSelect: true,\n          cursor: 'pointer',\n          dataLabels: {\n            enabled: true,\n            format: '<b>{point.name}</b>: {point.percentage:.1f} %',\n            style: {\n              color: 'black'\n            }\n          }\n        }\n      },\n      series: [{\n        type: 'pie',\n        innerSize: '60%',\n        name: '故障占比',\n        data: final\n      }]\n    }\n  }\n\n  handle24HourConfig = () => {\n    /** 24小时故障情况 */\n    const {\n      data\n    } = this.props;\n    const hourDivided = data.hourDivided;\n    let categories = [];\n    let faults =[];\n\n    hourDivided && hourDivided.map(divid => {\n      categories.push(divid.key);\n      faults.push(divid.value)\n    })\n    return {\n      chart: {\n        type: 'area'\n      },\n      title: {\n        text: '24小时故障情况'\n      },\n      xAxis: {\n        allowDecimals: false,\n        categories: categories,\n      },\n      yAxis: {\n        title: {\n          text: '故障数量'\n        },\n      },\n      tooltip: {\n        pointFormat: '{series.name} 发生故障 <b>{point.y:,.0f}</b>次'\n      },\n      series: [{\n        name: '故障情况',\n        data: faults\n      }]\n    }\n  }\n\n  handleFaultStatusConfig = () => {\n    const {\n      data\n    } = this.props;\n    const final = [];\n    const faultHandle = data.faultHandle;\n    faultHandle && faultHandle.map(handle => {\n      if (handle[0] == 'state_closed') {\n        final.push(['故障状态-已完结', handle[1]]);\n      }\n      if (handle[0] == 'state_fixed') {\n        final.push(['故障状态-已修复', handle[1]]);\n      }\n      if (handle[0]=='state_new') {\n        final.push(['故障状态-新报修', handle[1]]);\n      }\n      if (handle[0]=='state_processed') {\n        final.push(['故障状态-在处理', handle[1]]);\n      }\n    })\n\n\n\n    return {\n      chart: {\n        spacing: [40, 0, 40, 0]\n      },\n      title: {\n        text: '故障处理状态',\n        margin: 30\n      },\n      plotOptions: {\n        pie: {\n          allowPointSelect: true,\n          cursor: 'pointer',\n          dataLabels: {\n            enabled: false\n          },\n          showInLegend: true\n        }\n      },\n      series: [{\n        type: 'pie',\n        innerSize: '60%',\n        name: '故障处理状态',\n        data: final\n      }]\n    }\n  }\n\n  handleLineFaultConfig = () => {\n    const {\n      data\n    } = this.props;\n    const lineDivided = data.lineDivided;\n    const final = [];\n    for (var i = 1; i <= 17; i++) {\n      final.push(lineDivided && lineDivided[`line${i}`]);\n    }\n\n    return {\n      chart: {\n        type: 'column'\n      },\n      title: {\n        text: '各线路故障情况'\n      },\n      xAxis: {\n        categories: [\n          '一号线', '二号线', '三号线', '四号线', '五号线', '六号线', '七号线', '八号线', '九号线', '十号线', '十一号线', '十二号线', '十三号线', '十四号线', '十五号线', '十六号线', '十七号线'\n        ],\n        crosshair: true\n      },\n      yAxis: {\n        min: 0,\n        title: {\n          text: '故障数量（个）'\n        }\n      },\n      tooltip: {\n        pointFormat: '{series.name}: 发生故障<b>{point.y}个</b>'\n      },\n      plotOptions: {\n        column: {\n          borderWidth: 0\n        }\n      },\n      series: [{\n        name: '故障数量',\n        data: final\n      }]\n    }\n  }\n\n  render() {\n    // const {\n    //   data\n    // } = this.props;\n\n    return <div className = 'fault-card' >\n      <Card className='equip-card' title='故障信息'>\n\n      <div style={{minWidth: '220px'; width: '50%';}}><ReactHighcharts config = {\n        this.handleFaultPercentConfig()\n      }\n    /> </div>\n    <div style={{minWidth: '220px'; width: '50%';}}><ReactHighcharts config = {\n      this.handle24HourConfig()\n    }/> </div>\n    <div style={{minWidth: '220px'; width: '50%';}}><ReactHighcharts config = {\n      this.handleFaultStatusConfig()\n    }/></div> \n    <div style={{minWidth: '220px'; width: '50%';}}><ReactHighcharts config = {\n      this.handleLineFaultConfig()\n    }/></div>\n    </Card>\n\n    </div>\n  }\n}"]}]}