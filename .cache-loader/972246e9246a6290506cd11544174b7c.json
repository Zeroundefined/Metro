{"remainingRequest":"G:\\外包\\Metro\\Metro\\node_modules\\thread-loader\\dist\\cjs.js??ref--4-1!G:\\外包\\Metro\\Metro\\node_modules\\ts-loader\\index.js??ref--4-2!G:\\外包\\Metro\\Metro\\src\\pages\\Frame\\index.tsx","dependencies":[{"path":"G:\\外包\\Metro\\Metro\\src\\pages\\Frame\\index.tsx","mtime":1529825609363},{"path":"G:\\外包\\Metro\\Metro\\node_modules\\cache-loader\\dist\\cjs.js","mtime":0},{"path":"G:\\外包\\Metro\\Metro\\node_modules\\thread-loader\\dist\\cjs.js","mtime":0},{"path":"G:\\外包\\Metro\\Metro\\node_modules\\ts-loader\\index.js","mtime":1528433923000}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst React = require(\"react\");\r\nconst react_router_1 = require(\"react-router\");\r\nconst antd_1 = require(\"antd\");\r\nrequire(\"./Frame.scss\");\r\nconst METAIMG = require(\"../../img/icons-11.png\");\r\nconst REPORTIMG = require(\"../../img/icons-12.png\");\r\nconst LOGIMG = require(\"../../img/icons-13.png\");\r\nconst MenuItemGroup = antd_1.Menu.ItemGroup;\r\nclass Frame extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleRouting = item => {\r\n            // this.setState()\r\n            react_router_1.browserHistory.push(item.key);\r\n        };\r\n        this.renderAvatar = () => {\r\n            return React.createElement(\"div\", null,\r\n                React.createElement(antd_1.Icon, { type: \"logout\" }),\r\n                \"\\u6CE8\\u9500\");\r\n        };\r\n        this.renderMenu = () => {\r\n            let { types } = this.state;\r\n            let typeList = Object.entries(types);\r\n            let menus = [];\r\n            typeList.map(type => {\r\n                menus.push(React.createElement(antd_1.Menu.Item, { key: type[0] },\r\n                    React.createElement(antd_1.Icon, { type: type[1].icon_type }),\r\n                    type[1].title));\r\n            });\r\n            return menus;\r\n        };\r\n        this.state = {\r\n            types: {\r\n                \"/metaCenter\": { title: '元数据中心', icon_type: 'database', title_icon: METAIMG },\r\n                \"/reports\": { title: '报表管理', icon_type: 'area-chart', title_icon: REPORTIMG },\r\n                \"/logs\": { title: '日志管理', icon_type: 'profile', title_icon: LOGIMG }\r\n            }\r\n        };\r\n    }\r\n    render() {\r\n        const { location: { pathname } } = this.props;\r\n        return React.createElement(\"div\", { className: \"frame\" },\r\n            React.createElement(antd_1.Menu, { onClick: this.handleRouting, className: \"left-menu\", selectedKeys: [pathname] },\r\n                React.createElement(MenuItemGroup, { title: React.createElement(React.Fragment, null,\r\n                        React.createElement(\"div\", { className: \"frame-menu-icon\" }),\r\n                        \"\\u6570\\u636E\\u7BA1\\u7406\\u5E73\\u53F0\") }, this.renderMenu())),\r\n            React.createElement(\"div\", { className: \"content\" },\r\n                React.createElement(\"div\", { className: \"header\" },\r\n                    React.createElement(antd_1.Popover, { placement: \"bottomRight\", content: this.renderAvatar() },\r\n                        React.createElement(antd_1.Avatar, { icon: \"user\", style: { marginLeft: 'auto', marginRight: 20 } }))),\r\n                React.createElement(\"div\", { className: \"container\" },\r\n                    React.createElement(\"div\", { className: \"container-title\" },\r\n                        React.createElement(\"img\", { src: this.state.types[pathname].title_icon }),\r\n                        React.createElement(\"span\", { className: \"container-title\" }, this.state.types[pathname].title)),\r\n                    this.props.children)));\r\n    }\r\n}\r\nexports.default = Frame;\r\n",{"version":3,"file":"G:\\外包\\Metro\\Metro\\src\\pages\\Frame\\index.tsx","sourceRoot":"","sources":["G:\\外包\\Metro\\Metro\\src\\pages\\Frame\\index.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { browserHistory, RouteComponentProps } from 'react-router';\nimport { Menu, Icon, Avatar, Popover } from 'antd';\nimport './Frame.scss';\nimport * as METAIMG from '../../img/icons-11.png';\nimport * as REPORTIMG from '../../img/icons-12.png';\nimport * as LOGIMG from '../../img/icons-13.png';\n\nconst MenuItemGroup = Menu.ItemGroup;\n\nexport default class Frame extends React.Component<RouteComponentProps<any, any>> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      types: {\n        \"/metaCenter\": {title: '元数据中心', icon_type: 'database', title_icon: METAIMG},\n        \"/reports\": {title: '报表管理', icon_type: 'area-chart', title_icon: REPORTIMG},\n        \"/logs\": {title: '日志管理', icon_type: 'profile', title_icon: LOGIMG}\n      }\n    }\n  }\n  handleRouting = item => {\n    // this.setState()\n    browserHistory.push(item.key);\n  }\n\n  renderAvatar = () => {\n    return <div>\n      <Icon type=\"logout\" />注销\n    </div>\n  }\n\n  renderMenu = () => {\n    let { types } = this.state;\n    let typeList = Object.entries(types);\n    let menus = [];\n      typeList.map(type => {\n        menus.push(<Menu.Item key={type[0]}><Icon type={type[1].icon_type} />{type[1].title}</Menu.Item>)\n      })\n    return menus;\n  }\n\n  render() {\n    const {location:{pathname}} = this.props;\n    return <div className=\"frame\">\n      <Menu onClick={this.handleRouting} className=\"left-menu\" selectedKeys={[pathname]}>\n        <MenuItemGroup title={<><div className=\"frame-menu-icon\"/>数据管理平台</>}>\n          {this.renderMenu()}\n        </MenuItemGroup>\n      </Menu>\n      <div className=\"content\">\n        <div className=\"header\">\n          <Popover placement=\"bottomRight\" content={this.renderAvatar()}>\n            <Avatar icon=\"user\" style={{marginLeft: 'auto', marginRight: 20}}/>\n          </Popover>\n        </div>\n        <div className=\"container\">\n          <div className=\"container-title\">\n            <img src={this.state.types[pathname].title_icon} />\n            <span className=\"container-title\">{this.state.types[pathname].title}</span>\n          </div>\n          {this.props.children}\n        </div>\n      </div>\n    </div>\n  }\n}"]}]}