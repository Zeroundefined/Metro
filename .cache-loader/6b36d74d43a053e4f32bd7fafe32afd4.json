{"remainingRequest":"/Users/zhangmuren/project/Metro/node_modules/thread-loader/dist/cjs.js??ref--4-1!/Users/zhangmuren/project/Metro/node_modules/ts-loader/index.js??ref--4-2!/Users/zhangmuren/project/Metro/src/pages/Reports/ReportCard/CheckInCard.tsx","dependencies":[{"path":"/Users/zhangmuren/project/Metro/src/pages/Reports/ReportCard/CheckInCard.tsx","mtime":1529841201000},{"path":"/Users/zhangmuren/project/Metro/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/zhangmuren/project/Metro/node_modules/thread-loader/dist/cjs.js","mtime":0},{"path":"/Users/zhangmuren/project/Metro/node_modules/ts-loader/index.js","mtime":1528433923000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst React = require(\"react\");\nconst ReactHighcharts = require(\"react-highcharts\");\nclass CheckInCard extends React.Component {\n    render() {\n        const { data } = this.props;\n        const { hourDivided, frequent } = data;\n        let categories = [];\n        let datas = [];\n        hourDivided.map(divid => {\n            categories.push(divid.key);\n            datas.push(divid.value);\n        });\n        const line = {\n            chart: {\n                type: 'line'\n            },\n            title: {\n                text: '巡检信息'\n            },\n            xAxis: {\n                categories: categories\n            },\n            yAxis: {\n                title: {\n                    text: '巡检信息'\n                }\n            },\n            plotOptions: {\n                line: {\n                    dataLabels: {\n                        // 开启数据标签\n                        enabled: true\n                    },\n                    // 关闭鼠标跟踪，对应的提示框、点击事件会失效\n                    enableMouseTracking: false\n                }\n            },\n            series: [{\n                    name: '时间',\n                    data: datas\n                }]\n        };\n        const cyclic = {\n            chart: {\n                spacing: [40, 0, 40, 0]\n            },\n            title: {\n                floating: true,\n                text: '圆心显示的标题'\n            },\n            tooltip: {\n                pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\n            },\n            plotOptions: {\n                pie: {\n                    allowPointSelect: true,\n                    cursor: 'pointer',\n                    dataLabels: {\n                        enabled: true,\n                        format: '<b>{point.name}</b>: {point.percentage:.1f} %',\n                        style: {\n                            color: 'black'\n                        }\n                    }\n                }\n            },\n            series: [{\n                    type: 'pie',\n                    innerSize: '80%',\n                    name: '市场份额',\n                    data: [\n                        { name: 'Firefox', y: 45.0, url: 'http://bbs.hcharts.cn' },\n                        ['IE', 26.8],\n                        {\n                            name: 'Chrome',\n                            y: 12.8,\n                            sliced: true,\n                            selected: true,\n                            url: 'http://www.hcharts.cn'\n                        },\n                        ['Safari', 8.5],\n                        ['Opera', 6.2],\n                        ['其他', 0.7]\n                    ]\n                }]\n        };\n        return React.createElement(\"div\", { className: 'checkin-card' },\n            React.createElement(ReactHighcharts, { config: line }),\n            React.createElement(\"div\", null,\n                React.createElement(\"div\", null, frequent[0].frequent),\n                React.createElement(\"div\", null, \"\\u5E73\\u5747\\u65F6\\u957F\")));\n    }\n}\nexports.CheckInCard = CheckInCard;\n",{"version":3,"file":"/Users/zhangmuren/project/Metro/src/pages/Reports/ReportCard/CheckInCard.tsx","sourceRoot":"","sources":["/Users/zhangmuren/project/Metro/src/pages/Reports/ReportCard/CheckInCard.tsx"],"names":[],"mappings":";;AAAA,+BAA+B;AAC/B,oDAAoD;AAEpD,iBAAyB,SAAQ,KAAK,CAAC,SAAS;IAC9C,MAAM;QACJ,MAAM,EAAC,IAAI,EAAC,GAAG,IAAI,CAAC,KAAK,CAAC;QAC1B,MAAM,EAAE,WAAW,EAAE,QAAQ,EAAE,GAAG,IAAI,CAAC;QACvC,IAAI,UAAU,GAAG,EAAE,CAAC;QACpB,IAAI,KAAK,GAAE,EAAE,CAAC;QAEd,WAAW,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;YACtB,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YAC3B,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAA;QACzB,CAAC,CAAC,CAAA;QAEF,MAAM,IAAI,GAAG;YACX,KAAK,EAAE;gBACL,IAAI,EAAE,MAAM;aACb;YACD,KAAK,EAAE;gBACL,IAAI,EAAE,MAAM;aACb;YACD,KAAK,EAAE;gBACL,UAAU,EAAE,UAAU;aACvB;YACD,KAAK,EAAE;gBACL,KAAK,EAAE;oBACL,IAAI,EAAE,MAAM;iBACb;aACF;YACD,WAAW,EAAE;gBACX,IAAI,EAAE;oBACJ,UAAU,EAAE;wBACV,SAAS;wBACT,OAAO,EAAE,IAAI;qBACd;oBACD,wBAAwB;oBACxB,mBAAmB,EAAE,KAAK;iBAC3B;aACF;YACD,MAAM,EAAE,CAAC;oBACP,IAAI,EAAE,IAAI;oBACV,IAAI,EAAE,KAAK;iBACZ,CAAC;SACH,CAAA;QAED,MAAM,MAAM,GAAG;YACb,KAAK,EAAE;gBACL,OAAO,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;aACxB;YACD,KAAK,EAAE;gBACL,QAAQ,EAAE,IAAI;gBACd,IAAI,EAAE,SAAS;aAChB;YACD,OAAO,EAAE;gBACP,WAAW,EAAE,+CAA+C;aAC7D;YACD,WAAW,EAAE;gBACX,GAAG,EAAE;oBACH,gBAAgB,EAAE,IAAI;oBACtB,MAAM,EAAE,SAAS;oBACjB,UAAU,EAAE;wBACV,OAAO,EAAE,IAAI;wBACb,MAAM,EAAE,+CAA+C;wBACvD,KAAK,EAAE;4BACL,KAAK,EAAE,OAAO;yBACf;qBACF;iBACF;aACF;YACD,MAAM,EAAE,CAAC;oBACP,IAAI,EAAE,KAAK;oBACX,SAAS,EAAE,KAAK;oBAChB,IAAI,EAAE,MAAM;oBACZ,IAAI,EAAE;wBACJ,EAAE,IAAI,EAAE,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,GAAG,EAAE,uBAAuB,EAAE;wBAC1D,CAAC,IAAI,EAAE,IAAI,CAAC;wBACZ;4BACE,IAAI,EAAE,QAAQ;4BACd,CAAC,EAAE,IAAI;4BACP,MAAM,EAAE,IAAI;4BACZ,QAAQ,EAAE,IAAI;4BACd,GAAG,EAAE,uBAAuB;yBAC7B;wBACD,CAAC,QAAQ,EAAE,GAAG,CAAC;wBACf,CAAC,OAAO,EAAE,GAAG,CAAC;wBACd,CAAC,IAAI,EAAE,GAAG,CAAC;qBACZ;iBACF,CAAC;SACH,CAAA;QAED,OAAO,6BAAK,SAAS,EAAC,cAAc;YAClC,oBAAC,eAAe,IAAC,MAAM,EAAE,IAAI,GAAI;YACjC;gBACE,iCAAM,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAO;gBACjC,4DAAe,CACX,CACF,CAAA;IACR,CAAC;CACF;AAhGD,kCAgGC","sourcesContent":["import * as React from 'react';\nimport * as ReactHighcharts from 'react-highcharts';\n\nexport class CheckInCard extends React.Component {\n  render() {\n    const {data} = this.props;\n    const { hourDivided, frequent } = data;\n    let categories = [];\n    let datas =[];\n\n    hourDivided.map(divid => {\n      categories.push(divid.key);\n      datas.push(divid.value)\n    })\n\n    const line = {\n      chart: {\n        type: 'line'\n      },\n      title: {\n        text: '巡检信息'\n      },\n      xAxis: {\n        categories: categories\n      },\n      yAxis: {\n        title: {\n          text: '巡检信息'\n        }\n      },\n      plotOptions: {\n        line: {\n          dataLabels: {\n            // 开启数据标签\n            enabled: true\n          },\n          // 关闭鼠标跟踪，对应的提示框、点击事件会失效\n          enableMouseTracking: false\n        }\n      },\n      series: [{\n        name: '时间',\n        data: datas\n      }]\n    }\n\n    const cyclic = {\n      chart: {\n        spacing: [40, 0, 40, 0]\n      },\n      title: {\n        floating: true,\n        text: '圆心显示的标题'\n      },\n      tooltip: {\n        pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\n      },\n      plotOptions: {\n        pie: {\n          allowPointSelect: true,\n          cursor: 'pointer',\n          dataLabels: {\n            enabled: true,\n            format: '<b>{point.name}</b>: {point.percentage:.1f} %',\n            style: {\n              color: 'black'\n            }\n          }\n        }\n      },\n      series: [{\n        type: 'pie',\n        innerSize: '80%',\n        name: '市场份额',\n        data: [\n          { name: 'Firefox', y: 45.0, url: 'http://bbs.hcharts.cn' },\n          ['IE', 26.8],\n          {\n            name: 'Chrome',\n            y: 12.8,\n            sliced: true,\n            selected: true,\n            url: 'http://www.hcharts.cn'\n          },\n          ['Safari', 8.5],\n          ['Opera', 6.2],\n          ['其他', 0.7]\n        ]\n      }]\n    }\n\n    return <div className='checkin-card'>\n      <ReactHighcharts config={line} />\n      <div>\n        <div>{frequent[0].frequent}</div>\n        <div>平均时长</div>\n      </div>\n    </div>\n  }\n}"]}]}