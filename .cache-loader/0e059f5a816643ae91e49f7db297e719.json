{"remainingRequest":"G:\\外包\\Metro\\Metro\\node_modules\\thread-loader\\dist\\cjs.js??ref--4-1!G:\\外包\\Metro\\Metro\\node_modules\\ts-loader\\index.js??ref--4-2!G:\\外包\\Metro\\Metro\\src\\index.tsx","dependencies":[{"path":"G:\\外包\\Metro\\Metro\\src\\index.tsx","mtime":1529828121161},{"path":"G:\\外包\\Metro\\Metro\\node_modules\\cache-loader\\dist\\cjs.js","mtime":0},{"path":"G:\\外包\\Metro\\Metro\\node_modules\\thread-loader\\dist\\cjs.js","mtime":0},{"path":"G:\\外包\\Metro\\Metro\\node_modules\\ts-loader\\index.js","mtime":1528433923000}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst React = require(\"react\");\r\nconst redux_1 = require(\"redux\");\r\nconst ReactDOM = require(\"react-dom\");\r\nconst react_redux_1 = require(\"react-redux\");\r\nconst react_router_redux_1 = require(\"react-router-redux\");\r\nconst react_router_1 = require(\"react-router\");\r\nconst pages_1 = require(\"./pages\");\r\nconst LoginRedux_1 = require(\"../src/pages/Login/LoginRedux\");\r\nconst ReportsRedux_1 = require(\"../src/pages/Reports/ReportsRedux\");\r\nconst redux_thunk_1 = require(\"redux-thunk\");\r\nrequire(\"./app.scss\");\r\nrequire(\"antd/dist/antd.css\");\r\nexports.logStatus = false;\r\nconst reducers = redux_1.combineReducers({\r\n    routing: react_router_redux_1.routerReducer,\r\n    login: LoginRedux_1.reducer,\r\n    reports: ReportsRedux_1.reducer\r\n});\r\nconst store = redux_1.createStore(reducers, redux_1.applyMiddleware(redux_thunk_1.default));\r\nconst history = react_router_redux_1.syncHistoryWithStore(react_router_1.browserHistory, store);\r\nfunction handleRedirect(nextState, replace, next) {\r\n    // debugger\r\n    // checkAuth()\r\n    next();\r\n}\r\nReactDOM.render(React.createElement(react_redux_1.Provider, { store: store },\r\n    React.createElement(react_router_1.Router, { history: history },\r\n        React.createElement(react_router_1.Route, { path: \"/\", component: pages_1.Frame, onEnter: handleRedirect },\r\n            React.createElement(react_router_1.Route, { path: \"login\", component: pages_1.Login }),\r\n            React.createElement(react_router_1.Route, { path: \"metaCenter\", component: pages_1.Reports }),\r\n            React.createElement(react_router_1.Route, { path: \"reports\", component: pages_1.Reports }),\r\n            React.createElement(react_router_1.Route, { path: \"logs\", component: pages_1.Logs })))), document.getElementById('app'));\r\n",{"version":3,"file":"G:\\外包\\Metro\\Metro\\src\\index.tsx","sourceRoot":"","sources":["G:\\外包\\Metro\\Metro\\src\\index.tsx"],"names":[],"mappings":";;AAAA,+BAA+B;AAC/B,iCAAsE;AACtE,sCAAsC;AACtC,6CAAuC;AACvC,2DAAyE;AACzE,+CAAmF;AACnF,mCAAsD;AACtD,8DAAwE;AACxE,oEAA8E;AAE9E,6CAAgC;AAChC,sBAAoB;AACpB,8BAA4B;AAEjB,QAAA,SAAS,GAAG,KAAK,CAAA;AAE5B,MAAM,QAAQ,GAAG,uBAAe,CAAC;IAC/B,OAAO,EAAE,kCAAa;IACtB,KAAK,EAAE,oBAAY;IACnB,OAAO,EAAE,sBAAc;CACxB,CAAC,CAAC;AAEH,MAAM,KAAK,GAAG,mBAAW,CAAC,QAAQ,EAAE,uBAAe,CAAC,qBAAK,CAAC,CAAC,CAAC;AAC5D,MAAM,OAAO,GAAG,yCAAoB,CAAC,6BAAc,EAAE,KAAK,CAAC,CAAC;AAE5D,wBAAwB,SAAS,EAAE,OAAO,EAAE,IAAI;IAC9C,WAAW;IACX,cAAc;IACd,IAAI,EAAE,CAAC;AACT,CAAC;AAED,QAAQ,CAAC,MAAM,CACb,oBAAC,sBAAQ,IAAC,KAAK,EAAE,KAAK;IACpB,oBAAC,qBAAM,IAAC,OAAO,EAAE,OAAO;QACtB,oBAAC,oBAAK,IAAC,IAAI,EAAC,GAAG,EAAC,SAAS,EAAE,aAAK,EAAE,OAAO,EAAE,cAAc;YACvD,oBAAC,oBAAK,IAAC,IAAI,EAAC,OAAO,EAAC,SAAS,EAAE,aAAK,GAAG;YACvC,oBAAC,oBAAK,IAAC,IAAI,EAAC,YAAY,EAAC,SAAS,EAAE,eAAO,GAAI;YAC/C,oBAAC,oBAAK,IAAC,IAAI,EAAC,SAAS,EAAC,SAAS,EAAE,eAAO,GAAI;YAC5C,oBAAC,oBAAK,IAAC,IAAI,EAAC,MAAM,EAAC,SAAS,EAAE,YAAI,GAAI,CAChC,CACD,CACA,EACX,QAAQ,CAAC,cAAc,CAAC,KAAK,CAAC,CAC/B,CAAC","sourcesContent":["import * as React from 'react';\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport * as ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { syncHistoryWithStore, routerReducer } from 'react-router-redux';\nimport { Router, Route, browserHistory, IndexRoute, Redirect } from 'react-router';\nimport { Login, Reports, Frame, Logs } from './pages';\nimport { reducer as LoginReducer } from '../src/pages/Login/LoginRedux';\nimport { reducer as ReportsReducer } from '../src/pages/Reports/ReportsRedux';\nimport { checkAuth } from './utils/isLogin.ts';\nimport thunk from 'redux-thunk';\nimport './app.scss';\nimport 'antd/dist/antd.css';\n\nexport var logStatus = false\n\nconst reducers = combineReducers({\n  routing: routerReducer,\n  login: LoginReducer,\n  reports: ReportsReducer\n});\n\nconst store = createStore(reducers, applyMiddleware(thunk));\nconst history = syncHistoryWithStore(browserHistory, store);\n\nfunction handleRedirect(nextState, replace, next) {\n  // debugger\n  // checkAuth()\n  next();\n}\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router history={history}>\n      <Route path=\"/\" component={Frame} onEnter={handleRedirect}>\n        <Route path=\"login\" component={Login}/>\n        <Route path=\"metaCenter\" component={Reports} />\n        <Route path=\"reports\" component={Reports} />\n        <Route path=\"logs\" component={Logs} />\n      </Route>\n    </Router>\n  </Provider>,\n  document.getElementById('app')\n);\n"]}]}