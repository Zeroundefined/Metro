{"remainingRequest":"G:\\外包\\Metro\\Metro\\node_modules\\thread-loader\\dist\\cjs.js??ref--4-1!G:\\外包\\Metro\\Metro\\node_modules\\ts-loader\\index.js??ref--4-2!G:\\外包\\Metro\\Metro\\src\\pages\\Reports\\ReportCard\\FaultCard.tsx","dependencies":[{"path":"G:\\外包\\Metro\\Metro\\src\\pages\\Reports\\ReportCard\\FaultCard.tsx","mtime":1530423357916},{"path":"G:\\外包\\Metro\\Metro\\node_modules\\cache-loader\\dist\\cjs.js","mtime":0},{"path":"G:\\外包\\Metro\\Metro\\node_modules\\thread-loader\\dist\\cjs.js","mtime":0},{"path":"G:\\外包\\Metro\\Metro\\node_modules\\ts-loader\\index.js","mtime":1528433923000}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst React = require(\"react\");\r\nconst ReactHighcharts = require(\"react-highcharts\");\r\nconst components_1 = require(\"src/components\");\r\nconst tableConst_1 = require(\"../../../constant/tableConst\");\r\nclass FaultCard extends React.Component {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.state = {\r\n            lineFault: ''\r\n        };\r\n        this.handleFaultPercentConfig = () => {\r\n            /** 故障类型占比 */\r\n            const { data } = this.props;\r\n            const faultType = data.faultType || [];\r\n            const total = faultType.reduce((tol, cur) => tol + cur[1], 0);\r\n            const final = [];\r\n            faultType.map(type => {\r\n                // if (type[0] == 'type_comm') {\r\n                //   final.push(['故障类型-通信类', type[1] / total]);\r\n                // }\r\n                // if (type[0] == 'type_net') {\r\n                //   final.push(['故障类型-网络类', type[1] / total]);\r\n                // }\r\n                // if (type[0]=='type_signal') {\r\n                //   final.push(['故障类型-信号类', type[1] / total]);\r\n                // }\r\n                // if (type[0]== 'type_other') {\r\n                //   final.push(['故障类型-其他类', type[1] / total]);\r\n                // }\r\n                final.push([type.type, type.count]);\r\n            });\r\n            return {\r\n                chart: {\r\n                    spacing: [40, 0, 40, 0],\r\n                    backgroundColor: '#030B1E'\r\n                },\r\n                title: {\r\n                    // floating: true,\r\n                    text: '故障类型占比',\r\n                    style: {\r\n                        color: '#ffffff'\r\n                    }\r\n                },\r\n                tooltip: {\r\n                    pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\r\n                },\r\n                plotOptions: {\r\n                    pie: {\r\n                        allowPointSelect: true,\r\n                        cursor: 'pointer',\r\n                        dataLabels: {\r\n                            enabled: true,\r\n                            format: '<b>{point.name}</b>: {point.percentage:.1f} %',\r\n                            style: {\r\n                                color: '#ffffff'\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                series: [{\r\n                        type: 'pie',\r\n                        innerSize: '60%',\r\n                        name: '故障占比',\r\n                        data: final\r\n                    }],\r\n                colors: ['#9A52A4', '#E4A15A', '#CA476F', '#68A788']\r\n            };\r\n        };\r\n        this.handle24HourConfig = () => {\r\n            /** 24小时故障情况 */\r\n            const { data } = this.props;\r\n            const hourDivided = data.hourDivided;\r\n            let categories = [];\r\n            let faults = [];\r\n            tableConst_1.hoursList.map(hour => {\r\n                let currentHour = hourDivided.find(item => item.hour == hour);\r\n                categories.push(`${hour}点`);\r\n                faults.push(currentHour ? currentHour.count : 0);\r\n            });\r\n            return {\r\n                chart: {\r\n                    type: 'area',\r\n                    backgroundColor: '#030B1E'\r\n                },\r\n                title: {\r\n                    text: '24小时故障情况',\r\n                    style: {\r\n                        color: '#ffffff'\r\n                    }\r\n                },\r\n                xAxis: {\r\n                    allowDecimals: false,\r\n                    categories: categories,\r\n                },\r\n                yAxis: {\r\n                    title: {\r\n                        text: '故障数量',\r\n                        style: {\r\n                            color: '#ffffff'\r\n                        }\r\n                    },\r\n                },\r\n                tooltip: {\r\n                    pointFormat: '{series.name} 发生故障 <b>{point.y:,.0f}</b>次'\r\n                },\r\n                series: [{\r\n                        name: '故障情况',\r\n                        data: faults,\r\n                        style: {\r\n                            color: '#ffffff'\r\n                        }\r\n                    }],\r\n            };\r\n        };\r\n        this.handleFaultStatusConfig = () => {\r\n            const { data } = this.props;\r\n            const final = [];\r\n            const faultHandle = data.faultHandle;\r\n            faultHandle && faultHandle.map(handle => {\r\n                // if (handle[0] == 'state_closed') {\r\n                //   final.push(['故障状态-已完结', handle[1]]);\r\n                // }\r\n                // if (handle[0] == 'state_fixed') {\r\n                //   final.push(['故障状态-已修复', handle[1]]);\r\n                // }\r\n                // if (handle[0]=='state_new') {\r\n                //   final.push(['故障状态-新报修', handle[1]]);\r\n                // }\r\n                // if (handle[0]=='state_processed') {\r\n                //   final.push(['故障状态-在处理', handle[1]]);\r\n                // }\r\n                final.push([handle.status, handle.count]);\r\n            });\r\n            return {\r\n                chart: {\r\n                    spacing: [40, 0, 40, 0],\r\n                    backgroundColor: '#030B1E'\r\n                },\r\n                title: {\r\n                    text: '故障处理状态',\r\n                    margin: 30,\r\n                    style: {\r\n                        color: '#ffffff'\r\n                    }\r\n                },\r\n                plotOptions: {\r\n                    pie: {\r\n                        allowPointSelect: true,\r\n                        cursor: 'pointer',\r\n                        dataLabels: {\r\n                            enabled: false\r\n                        },\r\n                        showInLegend: true\r\n                    }\r\n                },\r\n                series: [{\r\n                        type: 'pie',\r\n                        innerSize: '60%',\r\n                        name: '故障处理状态',\r\n                        data: final\r\n                    }]\r\n            };\r\n        };\r\n        this.handleLineFaultConfig = () => {\r\n            const { data } = this.props;\r\n            const lineDivided = data.lineDivided;\r\n            const final = [];\r\n            const lineFault = [];\r\n            const categories = [\r\n                '一号线', '二号线', '三号线', '四号线', '五号线', '六号线', '七号线', '八号线', '九号线', '十号线', '十一号线', '十二号线', '十三号线', '十四号线', '十五号线', '十六号线', '十七号线'\r\n            ];\r\n            if (lineDivided) {\r\n                tableConst_1.linesList.map(line => {\r\n                    let currentLine = lineDivided.find(item => item.line == line.name);\r\n                    final.push(currentLine ? currentLine['count'] : '0');\r\n                    lineFault.push(`${line.name}${currentLine ? currentLine['count'] : '0'}`);\r\n                });\r\n            }\r\n            return [{\r\n                    chart: {\r\n                        type: 'column',\r\n                        backgroundColor: '#030B1E'\r\n                    },\r\n                    title: {\r\n                        text: '各线路故障情况',\r\n                        style: {\r\n                            color: '#ffffff'\r\n                        }\r\n                    },\r\n                    xAxis: {\r\n                        categories,\r\n                        crosshair: true\r\n                    },\r\n                    yAxis: {\r\n                        min: 0,\r\n                        title: {\r\n                            text: '故障数量（个）',\r\n                            style: {\r\n                                color: '#ffffff'\r\n                            }\r\n                        }\r\n                    },\r\n                    tooltip: {\r\n                        pointFormat: '{series.name}: 发生故障<b>{point.y}个</b>'\r\n                    },\r\n                    plotOptions: {\r\n                        column: {\r\n                            colorByPoint: true,\r\n                            borderWidth: 0\r\n                        }\r\n                    },\r\n                    series: [{\r\n                            name: '故障数量',\r\n                            data: final\r\n                        }],\r\n                    colors: ['#CE0000', '#8BCB1F', '#FECD06', '#502E84', '#9A52A4', '#E80378', '#F66F15', '#089BDE', '#7DC8E8', '#B1A0C4', '#8E162F', '#03795F', '#E794BF', '#89CFBD', '#BB786F']\r\n                }, lineFault];\r\n        };\r\n    }\r\n    render() {\r\n        const { data } = this.props;\r\n        const { faultType, hourDivided, faultHandle, lineDivided } = data;\r\n        // let text = this.state.lineFault.join(',')\r\n        let [config, lineFault] = this.handleLineFaultConfig();\r\n        return React.createElement(\"div\", { className: 'fault-card', style: { marginBottom: 30 } },\r\n            React.createElement(components_1.Card, { className: 'equip-card', title: '\\u6545\\u969C\\u4FE1\\u606F' },\r\n                React.createElement(\"div\", { style: { minWidth: '220px', width: '50%' } }, faultType && faultType.length ?\r\n                    React.createElement(ReactHighcharts, { config: this.handleFaultPercentConfig() }) :\r\n                    React.createElement(\"div\", { style: { flex: 1, textAlign: 'center', margin: '50px 0', color: '#827f7f' } }, \" \\u6682\\u65E0\\u6545\\u969C\\u7C7B\\u578B\\u5360\\u6BD4\")),\r\n                React.createElement(\"div\", { style: { minWidth: '220px', width: '50%' } }, hourDivided && hourDivided.length ?\r\n                    React.createElement(ReactHighcharts, { config: this.handle24HourConfig() }) :\r\n                    React.createElement(\"div\", { style: { flex: 1, textAlign: 'center', margin: '50px 0', color: '#827f7f' } }, \" \\u6682\\u65E024\\u5C0F\\u65F6\\u6545\\u969C\\u60C5\\u51B5\")),\r\n                React.createElement(\"div\", { style: { minWidth: '220px', width: '50%' } },\r\n                    faultHandle && faultHandle.length ?\r\n                        React.createElement(ReactHighcharts, { config: this.handleFaultStatusConfig() }) :\r\n                        React.createElement(\"div\", { style: { flex: 1, textAlign: 'center', margin: '50px 0', color: '#827f7f' } }, \" \\u6682\\u65E0\\u6545\\u969C\\u5904\\u7406\\u72B6\\u6001\"),\r\n                    React.createElement(\"div\", { style: { padding: '20px 40px' } }, \"XX\\u5E74XX\\u6708\\u6545\\u969C\\u63A5\\u62A5\\u7CFB\\u7EDF\\u5171\\u8BA1\\u63A5\\u62A5XX\\u8D77\\u6545\\u969C\\uFF0C\\u8F83\\u53BB\\u5E74\\u540C\\u6BD4\\u589E\\u957F\\uFF08\\u51CF\\u5C11\\uFF09XX%\\uFF0C\\u8F83\\u4E0A\\u6708\\u73AF\\u6BD4\\u589E\\u957F\\uFF08\\u51CF\\u5C11\\uFF09XX%\\uFF0C\\u5F15\\u8D77\\u4E94\\u5206\\u949F\\u665A\\u70B9X\\u8D77\\uFF0C\\u5168\\u5E74\\u7D2F\\u8BA1X\\u8D77\\uFF0C\\u5168\\u5E74\\u7D2F\\u8BA1X\\u8D77\\uFF0C\\u5341\\u4E94\\u5206\\u949F\\u665A\\u70B9X\\u8D77\\u3002\\u5176\\u4E2D\\u4FE1\\u53F7\\u4E13\\u4E1A\\u6545\\u969CXX\\u8D77\\uFF0C\\u901A\\u4FE1\\u4E13\\u4E1A\\u6545\\u969CXX\\u8D77\\uFF0C\\u4FE1\\u606F\\u4E13\\u4E1A\\u6545\\u969CXX\\u8D77\\uFF0C\\u5E73\\u5747\\u6545\\u969C\\u5904\\u7F6E\\u7528\\u65F6X\\u5C0F\\u65F6X\\u5206\\u949F\\uFF0C\\u6545\\u969C\\u4FEE\\u590D\\u7387XX%\\uFF0C\\u95ED\\u73AF\\u7387XX%\\u3002\")),\r\n                React.createElement(\"div\", { style: { minWidth: '220px', width: '50%' } },\r\n                    lineDivided && lineDivided.length ?\r\n                        React.createElement(ReactHighcharts, { config: config }) :\r\n                        React.createElement(\"div\", { style: { flex: 1, textAlign: 'center', margin: '50px 0', color: '#827f7f' } }, \" \\u6682\\u65E0\\u5404\\u7EBF\\u8DEF\\u6545\\u969C\\u60C5\\u51B5\"),\r\n                    React.createElement(\"div\", { style: { padding: '20px 40px' } },\r\n                        \"\\u5404\\u7EBF\\u8DEF\\u6545\\u969C\\u6570\\uFF1A\",\r\n                        lineFault))));\r\n    }\r\n}\r\nexports.FaultCard = FaultCard;\r\n",{"version":3,"file":"G:\\外包\\Metro\\Metro\\src\\pages\\Reports\\ReportCard\\FaultCard.tsx","sourceRoot":"","sources":["G:\\外包\\Metro\\Metro\\src\\pages\\Reports\\ReportCard\\FaultCard.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport * as ReactHighcharts from 'react-highcharts';\r\nimport {\r\n  Card\r\n} from 'src/components';\r\nimport {linesList, hoursList} from '../../../constant/tableConst';\r\ninterface Props {\r\n  data: any\r\n}\r\n\r\n\r\nexport class FaultCard extends React.Component < Props > {\r\n  state = {\r\n    lineFault:''\r\n  }\r\n  handleFaultPercentConfig = () => {\r\n    /** 故障类型占比 */\r\n    const {\r\n      data\r\n    } = this.props;\r\n    const faultType = data.faultType || [];\r\n    const total = faultType.reduce((tol, cur) => tol + cur[1], 0)\r\n    const final = [];\r\n    faultType.map(type => {\r\n      // if (type[0] == 'type_comm') {\r\n      //   final.push(['故障类型-通信类', type[1] / total]);\r\n      // }\r\n      // if (type[0] == 'type_net') {\r\n      //   final.push(['故障类型-网络类', type[1] / total]);\r\n      // }\r\n      // if (type[0]=='type_signal') {\r\n      //   final.push(['故障类型-信号类', type[1] / total]);\r\n      // }\r\n      // if (type[0]== 'type_other') {\r\n      //   final.push(['故障类型-其他类', type[1] / total]);\r\n      // }\r\n      final.push([type.type, type.count]);\r\n    })\r\n\r\n    return {\r\n      chart: {\r\n        spacing: [40, 0, 40, 0],\r\n        backgroundColor : '#030B1E'\r\n      },\r\n      title: {\r\n        // floating: true,\r\n        text: '故障类型占比',\r\n        style: {\r\n          color: '#ffffff'\r\n        }\r\n      },\r\n      tooltip: {\r\n        pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\r\n      },\r\n      plotOptions: {\r\n        pie: {\r\n          allowPointSelect: true,\r\n          cursor: 'pointer',\r\n          dataLabels: {\r\n            enabled: true,\r\n            format: '<b>{point.name}</b>: {point.percentage:.1f} %',\r\n            style: {\r\n              color: '#ffffff'\r\n            }\r\n          }\r\n        }\r\n      },\r\n      series: [{\r\n        type: 'pie',\r\n        innerSize: '60%',\r\n        name: '故障占比',\r\n        data: final\r\n      }],\r\n      colors: ['#9A52A4', '#E4A15A', '#CA476F', '#68A788']\r\n    }\r\n  }\r\n\r\n  handle24HourConfig = () => {\r\n    /** 24小时故障情况 */\r\n    const {\r\n      data\r\n    } = this.props;\r\n    const hourDivided = data.hourDivided;\r\n    let categories = [];\r\n    let faults =[];\r\n    hoursList.map(hour => {\r\n      let currentHour = hourDivided.find(item => item.hour == hour);\r\n      categories.push(`${hour}点`);\r\n      faults.push(currentHour ? currentHour.count : 0)\r\n    })\r\n    return {\r\n      chart: {\r\n        type: 'area',\r\n        backgroundColor : '#030B1E'\r\n      },\r\n      title: {\r\n        text: '24小时故障情况',\r\n        style: {\r\n          color: '#ffffff'\r\n        }\r\n      },\r\n      xAxis: {\r\n        allowDecimals: false,\r\n        categories: categories,\r\n      },\r\n      yAxis: {\r\n        title: {\r\n          text: '故障数量',\r\n          style: {\r\n            color: '#ffffff'\r\n          }\r\n        },\r\n      },\r\n      tooltip: {\r\n        pointFormat: '{series.name} 发生故障 <b>{point.y:,.0f}</b>次'\r\n      },\r\n      series: [{\r\n        name: '故障情况',\r\n        data: faults,\r\n        style: {\r\n          color: '#ffffff'\r\n        }\r\n      }],\r\n    }\r\n  }\r\n\r\n  handleFaultStatusConfig = () => {\r\n    const {\r\n      data\r\n    } = this.props;\r\n    const final = [];\r\n    const faultHandle = data.faultHandle;\r\n    faultHandle && faultHandle.map(handle => {\r\n      // if (handle[0] == 'state_closed') {\r\n      //   final.push(['故障状态-已完结', handle[1]]);\r\n      // }\r\n      // if (handle[0] == 'state_fixed') {\r\n      //   final.push(['故障状态-已修复', handle[1]]);\r\n      // }\r\n      // if (handle[0]=='state_new') {\r\n      //   final.push(['故障状态-新报修', handle[1]]);\r\n      // }\r\n      // if (handle[0]=='state_processed') {\r\n      //   final.push(['故障状态-在处理', handle[1]]);\r\n      // }\r\n        final.push([handle.status, handle.count]);\r\n\r\n    })\r\n\r\n\r\n\r\n    return {\r\n      chart: {\r\n        spacing: [40, 0, 40, 0],\r\n        backgroundColor : '#030B1E'\r\n      },\r\n      title: {\r\n        text: '故障处理状态',\r\n        margin: 30,\r\n        style: {\r\n          color: '#ffffff'\r\n        }\r\n      },\r\n      plotOptions: {\r\n        pie: {\r\n          allowPointSelect: true,\r\n          cursor: 'pointer',\r\n          dataLabels: {\r\n            enabled: false\r\n          },\r\n          showInLegend: true\r\n        }\r\n      },\r\n      series: [{\r\n        type: 'pie',\r\n        innerSize: '60%',\r\n        name: '故障处理状态',\r\n        data: final\r\n      }]\r\n    }\r\n  }\r\n\r\n  handleLineFaultConfig = () => {\r\n    const {\r\n      data\r\n    } = this.props;\r\n    const lineDivided = data.lineDivided;\r\n    const final = [];\r\n    const lineFault = [];\r\n    const categories = [\r\n      '一号线', '二号线', '三号线', '四号线', '五号线', '六号线', '七号线', '八号线', '九号线', '十号线', '十一号线', '十二号线', '十三号线', '十四号线', '十五号线', '十六号线', '十七号线'\r\n    ];\r\n    if(lineDivided) {\r\n      linesList.map(line => {\r\n        let currentLine = lineDivided.find(item => item.line == line.name);\r\n        final.push(currentLine ? currentLine['count'] : '0')\r\n        lineFault.push(`${line.name}${currentLine ? currentLine['count'] : '0'}`)\r\n      })\r\n    }\r\n\r\n    return [{\r\n      chart: {\r\n        type: 'column',\r\n        backgroundColor : '#030B1E'\r\n      },\r\n      title: {\r\n        text: '各线路故障情况',\r\n        style: {\r\n          color: '#ffffff'\r\n        }\r\n      },\r\n      xAxis: {\r\n        categories,\r\n        crosshair: true\r\n      },\r\n      yAxis: {\r\n        min: 0,\r\n        title: {\r\n          text: '故障数量（个）',\r\n          style: {\r\n            color: '#ffffff'\r\n          }\r\n        }\r\n      },\r\n      tooltip: {\r\n        pointFormat: '{series.name}: 发生故障<b>{point.y}个</b>'\r\n      },\r\n      plotOptions: {\r\n        column: {\r\n            colorByPoint:true,\r\n            borderWidth: 0\r\n        }\r\n      },\r\n      series: [{\r\n        name: '故障数量',\r\n        data: final\r\n      }],\r\n      colors: ['#CE0000', '#8BCB1F', '#FECD06', '#502E84', '#9A52A4', '#E80378', '#F66F15', '#089BDE', '#7DC8E8', '#B1A0C4', '#8E162F', '#03795F', '#E794BF', '#89CFBD', '#BB786F']\r\n    }, lineFault]\r\n  }\r\n\r\n\r\n  render() {\r\n    const {\r\n      data\r\n    } = this.props;\r\n    const { faultType, hourDivided, faultHandle, lineDivided} = data;\r\n    // let text = this.state.lineFault.join(',')\r\n    let [config, lineFault] = this.handleLineFaultConfig();\r\n\r\n    return <div className='fault-card' style={{ marginBottom: 30 }}>\r\n      <Card className='equip-card' title='故障信息'>\r\n          \r\n        <div style={{ minWidth: '220px', width: '50%' }}>\r\n          {\r\n            faultType && faultType.length ?\r\n            <ReactHighcharts config={\r\n              this.handleFaultPercentConfig()\r\n            }/> :\r\n            <div style={{flex: 1, textAlign: 'center', margin: '50px 0', color: '#827f7f' }}> 暂无故障类型占比</div>\r\n          }\r\n        </div>\r\n\r\n        <div style={{ minWidth: '220px', width: '50%' }}>\r\n          {hourDivided && hourDivided.length ?\r\n            <ReactHighcharts config={\r\n              this.handle24HourConfig()\r\n            } />:\r\n            <div style={{flex: 1, textAlign: 'center', margin: '50px 0', color: '#827f7f' }}> 暂无24小时故障情况</div>\r\n          }\r\n        </div>\r\n        <div style={{ minWidth: '220px', width: '50%' }}>\r\n          {\r\n            faultHandle && faultHandle.length ?\r\n            <ReactHighcharts config={\r\n              this.handleFaultStatusConfig()\r\n            } /> :\r\n            <div style={{flex: 1, textAlign: 'center', margin: '50px 0', color: '#827f7f' }}> 暂无故障处理状态</div>\r\n          }\r\n          <div style={{padding: '20px 40px'}}>XX年XX月故障接报系统共计接报XX起故障，较去年同比增长（减少）XX%，较上月环比增长（减少）XX%，引起五分钟晚点X起，全年累计X起，全年累计X起，十五分钟晚点X起。其中信号专业故障XX起，通信专业故障XX起，信息专业故障XX起，平均故障处置用时X小时X分钟，故障修复率XX%，闭环率XX%。</div>\r\n        </div>\r\n        <div style={{ minWidth: '220px', width: '50%' }}>\r\n          {\r\n            lineDivided && lineDivided.length ?\r\n            <ReactHighcharts config={config} />:\r\n            <div style={{flex: 1, textAlign: 'center', margin: '50px 0', color: '#827f7f' }}> 暂无各线路故障情况</div>\r\n          }\r\n          <div style={{padding: '20px 40px'}}>各线路故障数：{lineFault}</div>\r\n        </div>\r\n      </Card>\r\n\r\n    </div>\r\n  }\r\n}"]}]}