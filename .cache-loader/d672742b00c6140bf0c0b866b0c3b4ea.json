{"remainingRequest":"/Users/zhangmuren/project/Metro/node_modules/thread-loader/dist/cjs.js??ref--4-1!/Users/zhangmuren/project/Metro/node_modules/ts-loader/index.js??ref--4-2!/Users/zhangmuren/project/Metro/src/pages/Reports/ReportCard/EquipCard.tsx","dependencies":[{"path":"/Users/zhangmuren/project/Metro/src/pages/Reports/ReportCard/EquipCard.tsx","mtime":1530424825000},{"path":"/Users/zhangmuren/project/Metro/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/zhangmuren/project/Metro/node_modules/thread-loader/dist/cjs.js","mtime":0},{"path":"/Users/zhangmuren/project/Metro/node_modules/ts-loader/index.js","mtime":1528433923000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst React = require(\"react\");\nconst ReactHighcharts = require(\"react-highcharts\");\nrequire(\"./EquipCard.scss\");\nconst components_1 = require(\"src/components\");\nclass EquipCard extends React.Component {\n    render() {\n        const { data } = this.props;\n        const { firstTypeCount, equipTotal, secdTypeTotal } = data;\n        const handleConf = () => {\n            let conf = [];\n            firstTypeCount && firstTypeCount.map(data => {\n                let materials = [];\n                secdTypeTotal[data.first_type].map(item => {\n                    materials.push([item.secd_type, item.count]);\n                });\n                // let total = firstClass.reduce((tol, cur) => tol + cur.value, 0);\n                let percent = ((data.count / equipTotal) * 100).toFixed(2);\n                conf.push({\n                    chart: {\n                        spacing: [0, 20, 20, 0],\n                        backgroundColor: '#030B1E',\n                    },\n                    title: {\n                        useHTML: true,\n                        text: `<div>${data.first_type}</div><div>${percent}%</div>`,\n                        style: {\n                            color: '#ffffff'\n                        }\n                    },\n                    tooltip: {\n                        pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\n                    },\n                    plotOptions: {\n                        pie: {\n                            allowPointSelect: true,\n                            cursor: 'pointer',\n                            dataLabels: {\n                                enabled: true,\n                                format: '<b>{point.name}</b>: {point.percentage:.1f} %',\n                                style: {\n                                    color: '#ffffff'\n                                }\n                            }\n                        }\n                    },\n                    series: [{\n                            type: 'pie',\n                            innerSize: '60%',\n                            name: '市场份额',\n                            data: materials\n                        }],\n                    colors: ['#F78055', '#934D98', '#66A6CA', '#FE5486']\n                });\n            });\n            return conf;\n        };\n        return React.createElement(\"div\", { style: { marginBottom: 30 } },\n            React.createElement(components_1.Card, { className: 'equip-card', title: '\\u8BBE\\u5907\\u6A21\\u5757' }, Object.keys(firstTypeCount).length ?\n                handleConf().map((data, key) => {\n                    return React.createElement(\"div\", { style: { minWidth: '220px', width: '50%' }, key: key },\n                        React.createElement(ReactHighcharts, { config: data }));\n                }) :\n                React.createElement(\"div\", { style: { textAlign: 'center', margin: '50px 0', color: '#827f7f' } }, \"\\u6682\\u65E0\\u8BBE\\u5907\\u6A21\\u5757\\u4FE1\\u606F\")));\n    }\n}\nexports.EquipCard = EquipCard;\n",{"version":3,"file":"/Users/zhangmuren/project/Metro/src/pages/Reports/ReportCard/EquipCard.tsx","sourceRoot":"","sources":["/Users/zhangmuren/project/Metro/src/pages/Reports/ReportCard/EquipCard.tsx"],"names":[],"mappings":";;AAAA,+BAA+B;AAC/B,oDAAoD;AACpD,4BAA0B;AAC1B,+CAEwB;AAOxB,eAAuB,SAAQ,KAAK,CAAC,SAAgB;IACnD,MAAM;QACJ,MAAM,EACJ,IAAI,EACL,GAAG,IAAI,CAAC,KAAK,CAAC;QACf,MAAM,EACJ,cAAc,EAAE,UAAU,EAAG,aAAa,EAC3C,GAAG,IAAI,CAAA;QAER,MAAM,UAAU,GAAG,GAAG,EAAE;YACtB,IAAI,IAAI,GAAG,EAAE,CAAC;YACd,cAAc,IAAI,cAAc,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;gBAC1C,IAAI,SAAS,GAAG,EAAE,CAAC;gBACnB,aAAa,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;oBACxC,SAAS,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAA;gBAC9C,CAAC,CAAC,CAAC;gBACH,mEAAmE;gBACnE,IAAI,OAAO,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,GAAC,UAAU,CAAC,GAAG,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAE;gBAC1D,IAAI,CAAC,IAAI,CAAC;oBACR,KAAK,EAAE;wBACL,OAAO,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;wBACvB,eAAe,EAAG,SAAS;qBAC5B;oBACD,KAAK,EAAE;wBACL,OAAO,EAAE,IAAI;wBACb,IAAI,EAAE,QAAQ,IAAI,CAAC,UAAU,cAAc,OAAO,SAAS;wBAC3D,KAAK,EAAE;4BACL,KAAK,EAAE,SAAS;yBACjB;qBACF;oBACD,OAAO,EAAE;wBACP,WAAW,EAAE,+CAA+C;qBAC7D;oBACD,WAAW,EAAE;wBACX,GAAG,EAAE;4BACH,gBAAgB,EAAE,IAAI;4BACtB,MAAM,EAAE,SAAS;4BACjB,UAAU,EAAE;gCACV,OAAO,EAAE,IAAI;gCACb,MAAM,EAAE,+CAA+C;gCACvD,KAAK,EAAE;oCACL,KAAK,EAAE,SAAS;iCACjB;6BACF;yBACF;qBACF;oBACD,MAAM,EAAE,CAAC;4BACP,IAAI,EAAE,KAAK;4BACX,SAAS,EAAE,KAAK;4BAChB,IAAI,EAAE,MAAM;4BACZ,IAAI,EAAE,SAAS;yBAChB,CAAC;oBACF,MAAM,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;iBACrD,CAAC,CAAA;YACJ,CAAC,CAAC,CAAA;YACF,OAAO,IAAI,CAAC;QACd,CAAC,CAAA;QAED,OAAO,6BAAK,KAAK,EAAE,EAAE,YAAY,EAAE,EAAE,EAAC;YACtC,oBAAC,iBAAI,IAAC,SAAS,EAAC,YAAY,EAAC,KAAK,EAAC,0BAAM,IAEvC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,MAAM,CAAC,CAAC;gBACpC,UAAU,EAAE,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,GAAG,EAAE,EAAE;oBAC7B,OAAO,6BAAK,KAAK,EAAE,EAAC,QAAQ,EAAE,OAAO,EAAE,KAAK,EAAE,KAAK,EAAC,EAAE,GAAG,EAAE,GAAG;wBAC1D,oBAAC,eAAe,IAAC,MAAM,EAAE,IAAI,GAAG,CAC5B,CAAA;gBACZ,CAAC,CAAC,CAAC,CAAC;gBACJ,6BAAK,KAAK,EAAE,EAAC,SAAS,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,EAAE,KAAK,EAAE,SAAS,EAAC,uDAAgB,CAE9E,CACD,CAAA;IACR,CAAC;CACF;AAxED,8BAwEC","sourcesContent":["import * as React from 'react';\nimport * as ReactHighcharts from 'react-highcharts';\nimport './EquipCard.scss';\nimport {\n  Card\n} from 'src/components';\nimport { SSL_OP_NETSCAPE_DEMO_CIPHER_CHANGE_BUG } from 'constants';\n\ninterface Props {\n  data: any\n}\n\nexport class EquipCard extends React.Component<Props> {\n  render() {\n    const {\n      data\n    } = this.props;\n    const {\n      firstTypeCount, equipTotal,  secdTypeTotal\n    } = data\n\n    const handleConf = () => {\n      let conf = [];\n      firstTypeCount && firstTypeCount.map(data => {\n        let materials = [];\n        secdTypeTotal[data.first_type].map(item => {\n          materials.push([item.secd_type, item.count])\n        });\n        // let total = firstClass.reduce((tol, cur) => tol + cur.value, 0);\n        let percent = ((data.count/equipTotal) * 100).toFixed(2) ;\n        conf.push({\n          chart: {\n            spacing: [0, 20, 20, 0],\n            backgroundColor : '#030B1E',\n          },\n          title: {\n            useHTML: true,\n            text: `<div>${data.first_type}</div><div>${percent}%</div>`,\n            style: {\n              color: '#ffffff'\n            }\n          },\n          tooltip: {\n            pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\n          },\n          plotOptions: {\n            pie: {\n              allowPointSelect: true,\n              cursor: 'pointer',\n              dataLabels: {\n                enabled: true,\n                format: '<b>{point.name}</b>: {point.percentage:.1f} %',\n                style: {\n                  color: '#ffffff'\n                }\n              }\n            }\n          },\n          series: [{\n            type: 'pie',\n            innerSize: '60%',\n            name: '市场份额',\n            data: materials\n          }],\n          colors: ['#F78055', '#934D98', '#66A6CA', '#FE5486'] \n        })\n      })\n      return conf;\n    }\n\n    return <div style={{ marginBottom: 30}}>\n    <Card className='equip-card' title='设备模块'>\n    {\n      Object.keys(firstTypeCount).length ? \n      handleConf().map((data, key) => {\n        return <div style={{minWidth: '220px', width: '50%'}} key={key}>\n            <ReactHighcharts config={data}/>\n          </div> \n    }) : \n    <div style={{textAlign: 'center', margin: '50px 0', color: '#827f7f'}}>暂无设备模块信息</div>\n    }\n    </Card>\n    </div>\n  }\n}"]}]}