{"remainingRequest":"G:\\外包\\Metro\\Metro\\node_modules\\thread-loader\\dist\\cjs.js??ref--4-1!G:\\外包\\Metro\\Metro\\node_modules\\ts-loader\\index.js??ref--4-2!G:\\外包\\Metro\\Metro\\src\\pages\\Reports\\ReportCard\\MaterialCard.tsx","dependencies":[{"path":"G:\\外包\\Metro\\Metro\\src\\pages\\Reports\\ReportCard\\MaterialCard.tsx","mtime":1530358152816},{"path":"G:\\外包\\Metro\\Metro\\node_modules\\cache-loader\\dist\\cjs.js","mtime":0},{"path":"G:\\外包\\Metro\\Metro\\node_modules\\thread-loader\\dist\\cjs.js","mtime":0},{"path":"G:\\外包\\Metro\\Metro\\node_modules\\ts-loader\\index.js","mtime":1528433923000}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst React = require(\"react\");\r\nconst ReactHighcharts = require(\"react-highcharts\");\r\nrequire(\"./MaterialCard.scss\");\r\nconst components_1 = require(\"src/components\");\r\nclass MaterialCard extends React.Component {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.handleConf = () => {\r\n            const { data } = this.props;\r\n            let conf = [];\r\n            data && Object.entries(data).map(list => {\r\n                let materials = [];\r\n                list[1].map(item => {\r\n                    materials.push([item.staut, item.ratio]);\r\n                });\r\n                conf.push({\r\n                    chart: {\r\n                        spacing: [0, 20, 20, 0],\r\n                        backgroundColor: '#030B1E',\r\n                    },\r\n                    title: {\r\n                        text: list[0],\r\n                        style: {\r\n                            color: '#ffffff'\r\n                        }\r\n                    },\r\n                    tooltip: {\r\n                        pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\r\n                    },\r\n                    plotOptions: {\r\n                        pie: {\r\n                            allowPointSelect: true,\r\n                            cursor: 'pointer',\r\n                            dataLabels: {\r\n                                enabled: true,\r\n                                format: '<b>{point.name}</b>: {point.percentage:.1f} %',\r\n                                style: {\r\n                                    color: '#ffffff'\r\n                                }\r\n                            }\r\n                        }\r\n                    },\r\n                    series: [{\r\n                            type: 'pie',\r\n                            innerSize: '60%',\r\n                            name: '市场份额',\r\n                            data: materials\r\n                        }],\r\n                    colors: ['#E09343', '#55F4F0', '#53BFFD']\r\n                });\r\n            });\r\n            return conf;\r\n        };\r\n    }\r\n    render() {\r\n        const { data } = this.props;\r\n        return React.createElement(components_1.Card, { className: 'material-card', title: '\\u7269\\u8D44\\u6A21\\u5757', style: { marginBottom: 30 } }, Object.keys(data).length ?\r\n            this.handleConf().map(chart => {\r\n                return React.createElement(\"div\", { style: { minWidth: '220px', width: '50%' } },\r\n                    React.createElement(ReactHighcharts, { config: chart }));\r\n            }) :\r\n            React.createElement(\"div\", { style: { textAlign: 'center', margin: '50px 0', color: '#827f7f' } }, \"\\u6682\\u65E0\\u7269\\u8D44\\u6570\\u636E\"));\r\n    }\r\n}\r\nexports.MaterialCard = MaterialCard;\r\n",{"version":3,"file":"G:\\外包\\Metro\\Metro\\src\\pages\\Reports\\ReportCard\\MaterialCard.tsx","sourceRoot":"","sources":["G:\\外包\\Metro\\Metro\\src\\pages\\Reports\\ReportCard\\MaterialCard.tsx"],"names":[],"mappings":";;AAAA,+BAA+B;AAC/B,oDAAoD;AACpD,+BAA6B;AAC7B,+CAEwB;AAMxB,kBAA0B,SAAQ,KAAK,CAAC,SAAgB;IAAxD;;QACE,eAAU,GAAG,GAAG,EAAE;YAChB,MAAM,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;YAC5B,IAAI,IAAI,GAAG,EAAE,CAAC;YACd,IAAI,IAAI,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;gBACtC,IAAI,SAAS,GAAG,EAAE,CAAC;gBAClB,IAAI,CAAC,CAAC,CAAS,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;oBAC1B,SAAS,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,CAAA;gBAC1C,CAAC,CAAC,CAAC;gBACH,IAAI,CAAC,IAAI,CAAC;oBACR,KAAK,EAAE;wBACL,OAAO,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;wBACvB,eAAe,EAAG,SAAS;qBAC5B;oBACD,KAAK,EAAE;wBACL,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;wBACb,KAAK,EAAE;4BACL,KAAK,EAAE,SAAS;yBACjB;qBACF;oBACD,OAAO,EAAE;wBACP,WAAW,EAAE,+CAA+C;qBAC7D;oBACD,WAAW,EAAE;wBACX,GAAG,EAAE;4BACH,gBAAgB,EAAE,IAAI;4BACtB,MAAM,EAAE,SAAS;4BACjB,UAAU,EAAE;gCACV,OAAO,EAAE,IAAI;gCACb,MAAM,EAAE,+CAA+C;gCACvD,KAAK,EAAE;oCACL,KAAK,EAAE,SAAS;iCACjB;6BACF;yBACF;qBACF;oBACD,MAAM,EAAE,CAAC;4BACP,IAAI,EAAE,KAAK;4BACX,SAAS,EAAE,KAAK;4BAChB,IAAI,EAAE,MAAM;4BACZ,IAAI,EAAE,SAAS;yBAChB,CAAC;oBACF,MAAM,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;iBAC1C,CAAC,CAAA;YACJ,CAAC,CAAC,CAAA;YACF,OAAO,IAAI,CAAC;QACd,CAAC,CAAA;IA8BH,CAAC;IA7BC,MAAM;QACJ,MAAM,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;QAC5B,OAAO,oBAAC,iBAAI,IAAC,SAAS,EAAC,eAAe,EAAC,KAAK,EAAC,0BAAM,EAAC,KAAK,EAAE,EAAE,YAAY,EAAE,EAAE,EAAC,IAE1E,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC;YAC1B,IAAI,CAAC,UAAU,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;gBAC5B,OAAO,6BAAK,KAAK,EAAE,EAAE,QAAQ,EAAE,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE;oBAAE,oBAAC,eAAe,IAAC,MAAM,EAAE,KAAK,GAAI,CAAM,CAAA;YAClG,CAAC,CAAC,CAAC,CAAC;YACJ,6BAAK,KAAK,EAAE,EAAC,SAAS,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,EAAE,KAAK,EAAE,SAAS,EAAC,2CAAc,CAmBhF,CAAA;IACT,CAAC;CACF;AA5ED,oCA4EC","sourcesContent":["import * as React from 'react';\r\nimport * as ReactHighcharts from 'react-highcharts';\r\nimport './MaterialCard.scss';\r\nimport {\r\n  Card\r\n} from 'src/components';\r\n\r\ninterface Props {\r\n  data: any\r\n}\r\n\r\nexport class MaterialCard extends React.Component<Props> {\r\n  handleConf = () => {\r\n    const { data } = this.props;\r\n    let conf = [];\r\n    data && Object.entries(data).map(list => {\r\n      let materials = [];\r\n      (list[1] as any).map(item => {\r\n        materials.push([item.staut, item.ratio])\r\n      });\r\n      conf.push({\r\n        chart: {\r\n          spacing: [0, 20, 20, 0],\r\n          backgroundColor : '#030B1E',\r\n        },\r\n        title: {\r\n          text: list[0],\r\n          style: {\r\n            color: '#ffffff'\r\n          }\r\n        },\r\n        tooltip: {\r\n          pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'\r\n        },\r\n        plotOptions: {\r\n          pie: {\r\n            allowPointSelect: true,\r\n            cursor: 'pointer',\r\n            dataLabels: {\r\n              enabled: true,\r\n              format: '<b>{point.name}</b>: {point.percentage:.1f} %',\r\n              style: {\r\n                color: '#ffffff'\r\n              }\r\n            }\r\n          }\r\n        },\r\n        series: [{\r\n          type: 'pie',\r\n          innerSize: '60%',\r\n          name: '市场份额',\r\n          data: materials\r\n        }],\r\n        colors: ['#E09343', '#55F4F0', '#53BFFD']\r\n      })\r\n    })\r\n    return conf;\r\n  }\r\n  render() {\r\n    const { data } = this.props;\r\n    return <Card className='material-card' title='物资模块' style={{ marginBottom: 30}}>\r\n      {\r\n        Object.keys(data).length ? \r\n        this.handleConf().map(chart => {\r\n          return <div style={{ minWidth: '220px', width: '50%' }}><ReactHighcharts config={chart} /></div>\r\n        }) :\r\n        <div style={{textAlign: 'center', margin: '50px 0', color: '#827f7f'}}>暂无物资数据</div>\r\n      }\r\n      {/*<\r\n      ReactHighcharts config = {\r\n        conf1\r\n      }\r\n    /> <\r\n    ReactHighcharts config = {\r\n      conf2\r\n    }\r\n    /> <\r\n    ReactHighcharts config = {\r\n      conf3\r\n    }\r\n    /> <\r\n    ReactHighcharts config = {\r\n      conf4\r\n    }\r\n    /> */}\r\n    </Card>\r\n  }\r\n}"]}]}