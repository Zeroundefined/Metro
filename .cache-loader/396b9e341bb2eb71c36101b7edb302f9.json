{"remainingRequest":"G:\\work\\learn\\Metro\\node_modules\\thread-loader\\dist\\cjs.js??ref--4-1!G:\\work\\learn\\Metro\\node_modules\\ts-loader\\index.js??ref--4-2!G:\\work\\learn\\Metro\\src\\pages\\Login\\index.tsx","dependencies":[{"path":"G:\\work\\learn\\Metro\\src\\pages\\Login\\index.tsx","mtime":1530014112733},{"path":"G:\\work\\learn\\Metro\\node_modules\\cache-loader\\dist\\cjs.js","mtime":0},{"path":"G:\\work\\learn\\Metro\\node_modules\\thread-loader\\dist\\cjs.js","mtime":0},{"path":"G:\\work\\learn\\Metro\\node_modules\\ts-loader\\index.js","mtime":1528433923000}],"contextDependencies":[],"result":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst React = require(\"react\");\r\nconst antd_1 = require(\"antd\");\r\nconst ReactDOM = require(\"react-dom\");\r\nconst react_router_1 = require(\"react-router\");\r\nconst react_redux_1 = require(\"react-redux\");\r\nconst LoginRedux_1 = require(\"./LoginRedux\");\r\nrequire(\"./Login.scss\");\r\nconst isLogin_1 = require(\"../../utils/isLogin\");\r\nconst FormItem = antd_1.Form.Item;\r\nclass Login extends React.Component {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.handleSubmit = () => {\r\n            const { form: { validateFields }, login } = this.props;\r\n            validateFields((err, value) => {\r\n                if (err) {\r\n                    return;\r\n                }\r\n                login(value.userName, value.password).then(data => {\r\n                    if (data.errMsg) {\r\n                        antd_1.message.error(data.errMsg);\r\n                    }\r\n                    else {\r\n                        antd_1.message.success(\"登录成功\");\r\n                        isLogin_1.env.logStatus = true;\r\n                        react_router_1.browserHistory.push('/metaCenter');\r\n                    }\r\n                });\r\n            });\r\n        };\r\n    }\r\n    render() {\r\n        const { form: { getFieldDecorator } } = this.props;\r\n        return ReactDOM.createPortal(React.createElement(\"div\", { className: \"login\" },\r\n            React.createElement(\"div\", { className: \"login-icon\" }),\r\n            React.createElement(\"div\", { className: \"login-title\" }, \"\\u901A\\u53F7\\u5927\\u5C4F\\u6570\\u636E\\u540E\\u53F0\\u7BA1\\u7406\\u7CFB\\u7EDF\"),\r\n            React.createElement(\"div\", { className: \"login-form\" },\r\n                React.createElement(antd_1.Form, null,\r\n                    React.createElement(FormItem, null, getFieldDecorator('userName', {\r\n                        rules: [\r\n                            { required: true, message: '请输入用户名' },\r\n                            { pattern: /\\w+/, message: '请输入正确的用户名，允许数字，字母，下划线' }\r\n                        ],\r\n                    })(React.createElement(antd_1.Input, { prefix: React.createElement(antd_1.Icon, { type: \"user\", style: { color: 'rgba(0,0,0,.25)' } }), placeholder: \"\\u8BF7\\u8F93\\u5165\\u7528\\u6237\\u540D\" }))),\r\n                    React.createElement(FormItem, null, getFieldDecorator('password', {\r\n                        rules: [\r\n                            { required: true, message: '请输入密码' },\r\n                            { pattern: /\\w+/, message: '请输入正确的密码，允许数字，字母，下划线' }\r\n                        ],\r\n                    })(React.createElement(antd_1.Input, { prefix: React.createElement(antd_1.Icon, { type: \"lock\", style: { color: 'rgba(0,0,0,.25)' } }), type: \"password\", placeholder: \"\\u8BF7\\u8F93\\u5165\\u5BC6\\u7801\" }))),\r\n                    React.createElement(antd_1.Button, { onClick: this.handleSubmit, type: \"primary\" }, \"\\u767B\\u5F55\")))), document.querySelector('#app'));\r\n    }\r\n}\r\nexports.default = antd_1.Form.create()(react_redux_1.connect(null, LoginRedux_1.actions)(Login));\r\n",{"version":3,"file":"G:\\work\\learn\\Metro\\src\\pages\\Login\\index.tsx","sourceRoot":"","sources":["G:\\work\\learn\\Metro\\src\\pages\\Login\\index.tsx"],"names":[],"mappings":";;AAAA,+BAA+B;AAC/B,+BAA0D;AAC1D,sCAAsC;AACtC,+CAA8C;AAC9C,6CAAsC;AACtC,6CAAuC;AAEvC,wBAAsB;AACtB,iDAA0C;AAC1C,MAAM,QAAQ,GAAG,WAAI,CAAC,IAAI,CAAC;AAE3B,WAAY,SAAQ,KAAK,CAAC,SAA8C;IAAxE;;QACE,iBAAY,GAAG,GAAG,EAAE;YAClB,MAAM,EAAE,IAAI,EAAE,EAAE,cAAc,EAAE,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;YACvD,cAAc,CAAC,CAAC,GAAG,EAAE,KAAK,EAAE,EAAE;gBAC5B,IAAI,GAAG,EAAE;oBACP,OAAM;iBACP;gBAEA,KAAK,CAAC,KAAK,CAAC,QAAQ,EAAE,KAAK,CAAC,QAAQ,CAAS,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;oBACzD,IAAI,IAAI,CAAC,MAAM,EAAE;wBACf,cAAO,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;qBAC5B;yBAAM;wBACL,cAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;wBACxB,aAAG,CAAC,SAAS,GAAG,IAAI,CAAC;wBACrB,6BAAc,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;qBACpC;gBACH,CAAC,CAAC,CAAA;YAEJ,CAAC,CAAC,CAAA;QACJ,CAAC,CAAA;IAuCH,CAAC;IArCC,MAAM;QACJ,MAAM,EAAE,IAAI,EAAE,EAAE,iBAAiB,EAAE,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;QACnD,OAAO,QAAQ,CAAC,YAAY,CAC1B,6BAAK,SAAS,EAAC,OAAO;YACpB,6BAAK,SAAS,EAAC,YAAY,GAAG;YAC9B,6BAAK,SAAS,EAAC,aAAa,+EAAmB;YAC/C,6BAAK,SAAS,EAAC,YAAY;gBACzB,oBAAC,WAAI;oBACH,oBAAC,QAAQ,QACN,iBAAiB,CAAC,UAAU,EAAE;wBAC7B,KAAK,EAAE;4BACL,EAAE,QAAQ,EAAE,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE;4BACrC,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,uBAAuB,EAAE;yBACrD;qBACF,CAAC,CACA,oBAAC,YAAK,IAAC,MAAM,EAAE,oBAAC,WAAI,IAAC,IAAI,EAAC,MAAM,EAAC,KAAK,EAAE,EAAE,KAAK,EAAE,iBAAiB,EAAE,GAAI,EAAE,WAAW,EAAC,sCAAQ,GAAG,CAClG,CACQ;oBACX,oBAAC,QAAQ,QACN,iBAAiB,CAAC,UAAU,EAAE;wBAC7B,KAAK,EAAE;4BACL,EAAE,QAAQ,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE;4BACpC,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,sBAAsB,EAAE;yBACpD;qBACF,CAAC,CACA,oBAAC,YAAK,IAAC,MAAM,EAAE,oBAAC,WAAI,IAAC,IAAI,EAAC,MAAM,EAAC,KAAK,EAAE,EAAE,KAAK,EAAE,iBAAiB,EAAE,GAAI,EAAE,IAAI,EAAC,UAAU,EAAC,WAAW,EAAC,gCAAO,GAAG,CACjH,CACQ;oBACX,oBAAC,aAAM,IAAC,OAAO,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,EAAC,SAAS,mBAAY,CACzD,CACH,CACF,EACN,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,CAC/B,CAAC;IAGJ,CAAC;CACF;AAED,kBAAe,WAAI,CAAC,MAAM,EAAE,CAAC,qBAAO,CAAC,IAAI,EAAE,oBAAO,CAAC,CAAC,KAAK,CAAC,CAAC,CAAA","sourcesContent":["import * as React from 'react';\r\nimport { Form, Input, Icon, Button, message } from 'antd';\r\nimport * as ReactDOM from 'react-dom';\r\nimport { browserHistory } from 'react-router';\r\nimport { connect } from 'react-redux';\r\nimport { actions } from './LoginRedux';\r\nimport { FormComponentProps } from 'antd/lib/form';\r\nimport './Login.scss';\r\nimport { env } from '../../utils/isLogin';\r\nconst FormItem = Form.Item;\r\n\r\nclass Login extends React.Component<FormComponentProps & typeof actions> {\r\n  handleSubmit = () => {\r\n    const { form: { validateFields }, login } = this.props;\r\n    validateFields((err, value) => {\r\n      if (err) {\r\n        return\r\n      }\r\n\r\n      (login(value.userName, value.password) as any).then(data => {\r\n        if (data.errMsg) {\r\n          message.error(data.errMsg);\r\n        } else {\r\n          message.success(\"登录成功\");\r\n          env.logStatus = true;\r\n          browserHistory.push('/metaCenter');\r\n        }\r\n      })\r\n\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { form: { getFieldDecorator } } = this.props;\r\n    return ReactDOM.createPortal(\r\n      <div className=\"login\">\r\n        <div className=\"login-icon\" />\r\n        <div className=\"login-title\">通号大屏数据后台管理系统</div>\r\n        <div className=\"login-form\">\r\n          <Form>\r\n            <FormItem>\r\n              {getFieldDecorator('userName', {\r\n                rules: [\r\n                  { required: true, message: '请输入用户名' },\r\n                  { pattern: /\\w+/, message: '请输入正确的用户名，允许数字，字母，下划线' }\r\n                ],\r\n              })(\r\n                <Input prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"请输入用户名\" />\r\n              )}\r\n            </FormItem>\r\n            <FormItem>\r\n              {getFieldDecorator('password', {\r\n                rules: [\r\n                  { required: true, message: '请输入密码' },\r\n                  { pattern: /\\w+/, message: '请输入正确的密码，允许数字，字母，下划线' }\r\n                ],\r\n              })(\r\n                <Input prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} type=\"password\" placeholder=\"请输入密码\" />\r\n              )}\r\n            </FormItem>\r\n            <Button onClick={this.handleSubmit} type=\"primary\">登录</Button>\r\n          </Form>\r\n        </div>\r\n      </div>, \r\n      document.querySelector('#app')\r\n    );\r\n\r\n\r\n  }\r\n}\r\n\r\nexport default Form.create()(connect(null, actions)(Login))"]}]}